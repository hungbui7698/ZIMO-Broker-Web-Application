{"version":3,"sources":["components/Login/Login.js","components/MainHeader/Navigation.js","components/MainHeader/MainHeader.js","components/MainFooter/MainFooter.js","components/LeftsideMenu/APLeftSideMenu.js","logik/logik.js","components/GUIAppProvider/APMainBody/AppInstances/AddAppInstance/AddAppInstance.js","components/GUIAppProvider/APMainBody/AppInstances/AppInstanceList/EditAppInstance/EditAppInstance.js","components/GUIAppProvider/APMainBody/AppInstances/AppInstanceList/AppInstanceList.js","components/GUIAppProvider/APMainBody/AppInstances/AppInstances.js","components/GUIAppProvider/APMainBody/DevApps/AddApp/AddApp.js","components/GUIAppProvider/APMainBody/DevApps/DevAppsList/EditApp/EditApp.js","components/GUIAppProvider/APMainBody/DevApps/DevAppsList/DevAppsList.js","components/GUIAppProvider/APMainBody/DevApps/DevApps.js","components/UI/ProductTable.js","components/GUIAppProvider/APMainBody/CloudFlavour/CloudFlavour.js","components/GUIAppProvider/APMainBody/NetworkFlavour/NetworkFlavourList/NetworkFlavourInformation/NetworkFlavourInformation.js","components/GUIAppProvider/APMainBody/NetworkFlavour/NetworkFlavourList/NetworkFlavourList.js","components/GUIAppProvider/APMainBody/NetworkFlavour/NetworkFlavour.js","components/GUIAppProvider/APMainBody/AppMonitoring/Map/Map.js","components/GUIAppProvider/APMainBody/AppMonitoring/Map/MapStyle.js","components/GUIAppProvider/APMainBody/AppMonitoring/AppMonitoringList/AppMonitoringList.js","components/GUIAppProvider/APMainBody/AppMonitoring/Chart/ChartCPU.js","components/GUIAppProvider/APMainBody/AppMonitoring/Chart/ChartMemory.js","components/GUIAppProvider/APMainBody/AppMonitoring/Chart/ChartNetworkSent.js","components/GUIAppProvider/APMainBody/AppMonitoring/Chart/ChartNetworkRecieve.js","components/GUIAppProvider/APMainBody/AppMonitoring/Chart/ChartDiskUsage.js","components/GUIAppProvider/APMainBody/AppMonitoring/AppMonitoring.js","components/GUIAppProvider/APMainBody/APMainBody.js","components/GUIAppProvider/GUIAppProvider.js","components/GUIInfraProvider/IPMainBody/MarketMaps/Information/Information.js","components/GUIInfraProvider/IPMainBody/MarketMaps/List/List.js","components/GUIInfraProvider/IPMainBody/MarketMaps/Map/Search.js","components/GUIInfraProvider/IPMainBody/MarketMaps/Map/Map.js","components/GUIInfraProvider/IPMainBody/MarketMaps/Map/MapStyle.js","components/GUIInfraProvider/IPMainBody/MarketMaps/AddInfrastructure/AddInfrastructure.js","components/GUIInfraProvider/IPMainBody/MarketMaps/MarketMaps.js","components/GUIInfraProvider/IPMainBody/IPMonitoring/IPMonitoringList/IPMonitoringList.js","components/GUIInfraProvider/IPMainBody/IPMonitoring/Chart/ChartDown.js","components/GUIInfraProvider/IPMainBody/IPMonitoring/Chart/ChartUp.js","components/GUIInfraProvider/IPMainBody/IPMonitoring/IPMonitoring.js","components/GUIInfraProvider/IPMainBody/IPMainBody.js","components/LeftsideMenu/LeftsideMenu.js","components/GUIInfraProvider/GUIInfraProvider.js","components/LeftsideMenu/AULeftSideMenu.js","components/GUIAppUser/AUMainBody/AppGroupManagement/AppGroup/EditAppGroup/SelectApp/ConfigApp.js","components/GUIAppUser/AUMainBody/AppGroupManagement/AppGroup/EditAppGroup/SelectApp/SelectApp.js","components/GUIAppUser/AUMainBody/AppGroupManagement/AppGroup/EditAppGroup/EditAppGroup.js","components/GUIAppUser/AUMainBody/AppGroupManagement/AppGroup/OrderApp/Map/Map.js","components/GUIAppUser/AUMainBody/AppGroupManagement/AppGroup/OrderApp/Map/MapStyle.js","components/GUIAppUser/AUMainBody/AppGroupManagement/AppGroup/OrderApp/DeploymentOptions/ViewDetailQoS.js","components/GUIAppUser/AUMainBody/AppGroupManagement/AppGroup/OrderApp/DeploymentOptions/ViewDetailFunctional.js","components/GUIAppUser/AUMainBody/AppGroupManagement/AppGroup/OrderApp/DeploymentOptions/ViewDetailNonFunctional.js","components/GUIAppUser/AUMainBody/AppGroupManagement/AppGroup/OrderApp/DeploymentOptions/DeploymentOptions.js","components/GUIAppUser/AUMainBody/AppGroupManagement/AppGroup/OrderApp/OrderApp.js","components/GUIAppUser/AUMainBody/AppGroupManagement/AppGroup/AppGroup.js","components/GUIAppUser/AUMainBody/AppGroupManagement/AddAppGroup/SelectApp/ConfigApp.js","components/GUIAppUser/AUMainBody/AppGroupManagement/AddAppGroup/SelectApp/SelectApp.js","components/GUIAppUser/AUMainBody/AppGroupManagement/AddAppGroup/AddAppGroup.js","components/GUIAppUser/AUMainBody/AppGroupManagement/AppGroupManagement.js","components/GUIAppUser/AUMainBody/DeployAppView/Map/Map.js","components/GUIAppUser/AUMainBody/DeployAppView/Map/MapStyle.js","components/GUIAppUser/AUMainBody/DeployAppView/DeployAppList/DeployAppList.js","components/GUIAppUser/AUMainBody/DeployAppView/DeployAppView.js","components/GUIAppUser/AUMainBody/AUMainBody.js","components/GUIAppUser/GUIAppUser.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","className","type","id","placeholder","value","onClick","setLogin","user","document","getElementById","userRole","setUser","setUserRole","Navigation","src","alt","MainHeader","APLeftSideMenu","setMenu","menu","setStar","rate","a","Array","i","map","elem","index","serverurl","AddAppInstance","useState","appList","setAppList","cloudFlavourList","setCloudFlavourList","networkFlavourList","setNetworkFlavourList","sendInfoToServer","importData","getAllData","fetch","method","headers","body","JSON","stringify","then","setShow","refresh","error","console","log","zone","app","organization","CloudFlavour","NetworkFlavour","find","_id","cloudflavour","networkflavour","useEffect","response","json","data","show","Modal","scrollable","onHide","Header","closeButton","Title","Body","name","version","Footer","Button","variant","EditAppInstance","appInstance","defaultValue","AppInstanceList","items","config","sortConfig","setSortConfig","useMemo","sortableItems","sort","b","key","direction","requestSort","useSortableData","AllAppInstances","filteredString","setFilteredString","filteredItems","setFilteredItems","getClassNamesFor","undefined","filter","item","Object","keys","some","String","includes","onChange","e","target","selectedAppInstance","deploymentType","deleteApp","AppInstances","appInstances","setAppInstances","useCallback","AddApp","setDeploymentType","Region","Organization","Name","Version","DeploymentType","Path","EditApp","region","DevAppsList","AppsList","provider","DevApps","apps","setApps","ProductTable","rows","columns","column","API","label","action","delete","flavours","setFlavours","CPU","RAM","storage","nwMbps","NetworkFlavourInformation","size","colSpan","NetWorkFlavour","delay","downlink","uplink","NetworkFlavourList","AllNetworkFlavour","mapContainerStyle","width","height","float","center","lat","lng","options","styles","Map","showCircle","setShowCircle","zoom","onLoad","onMapLoad","onMapClick","position","cloud","icon","url","scaledSize","window","google","maps","Size","origin","Point","anchor","setSelectedAppInstance","status","network","radius","onCloseClick","AppMonitoringList","now","Date","getTime","hour","ChartCPU","ResponsiveContainer","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","dy","tickFormatter","unixTime","moment","format","YAxis","Legend","Tooltip","Line","stroke","ChartMemory","domain","ChartNetworkSent","ChartNetworkRecieve","ChartDiskUsage","AppMonitoring","mapRef","useRef","current","APMainBody","GUIAppProvider","Information","getEditedData","selectedInfra","setEdit","setSelectedInfra","edit","List","filteredInfrasList","Search","usePlacesAutocomplete","requestOptions","location","ready","suggestions","setValue","clearSuggestions","chooseLocation","address","getGeocode","result","getLatLng","panTo","setCenter","setInfrasList","onSelect","disabled","place","description","place_id","searchedLocation","infra","strokeColor","fillColor","AddInfrastructure","React","setType","handleClose","setSelectedLat","setSelectedLng","handleShow","event","selectedLat","selectedLng","min","MarketMaps","showModalAddInra","setShowModalAddInfra","modalAddInfraShow","changeLat","changeLng","latLng","setSearchedLocation","infrasList","setFilteredInfrasList","socket","setSocket","io","on","updatedInfraList","filteredInfra","Infra","InfrasList","IPMonitoringList","AllInfraInstances","selectedInfraInstance","setSelectedInfraInstance","delayTolerance","toString","Downlink","Uplink","ChartDown","ChartUp","IPMonitoring","IPMainBody","LeftSideMenu","GUIInfraProvider","AULeftSideMenu","ConfigApp","qos","latency","throughput","jitter","nonFunctional","reliability","availability","portability","security","usability","cost","functional","numberOfUser","SelectApp","filteredApps","setFilteredApps","unSelected","setUnSelected","selected","selectedApps","setSelected","EditAppGroup","closeModal","appGroupData","setAppGroupData","getAppConfigData","Latency","Throughput","Jitter","Reliability","Availability","Portability","Security","Usability","Cost","Users","length","push","appGroup","setSelectedApp","ViewDetailQoS","showDetail","setShowDetail","compareAppQOS","reqAppGroup","res","reqApps","resApp","onMouseOver","onMouseOut","ViewDetailFunctional","compareAppFunctional","ViewDetailNonFunctional","compareAppNonFunctional","DeploymentOptions","deployBtnHandler","sliceconfig","uplink_slice","downlink_slice","closeShowOptions","catch","err","showOptions","option","OrderApp","setOptions","setRadius","setShowOption","getData","begin","end","moveToOptions","add","AppGroup","selectedApp","AddAppGroup","AppGroupManagement","appGroupList","setAppGroupList","AllAppGroupList","setSelectedAppGroup","selectedAppGroup","DeployAppList","DeployAppView","AUMainBody","GUIAppUser","libraries","App","login","useLoadScript","googleMapsApiKey","isLoaded","loadError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ebf69bfd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Login.css\";\r\nconst Login = (props) => {\r\n  const login = () => {\r\n    props.setLogin(true);\r\n    var user = document.getElementById(\"user\").value;\r\n    var userRole = document.getElementById(\"userRole\").value;\r\n    props.setUser(user);\r\n    props.setUserRole(userRole);\r\n  };\r\n  return (\r\n    <div className=\"view-login\">\r\n      <h1>ZIMO</h1>\r\n      <h2>Zero-touch Infrastructure Management and Orchestration</h2>\r\n      <label>Please input your username...</label>\r\n      <br />\r\n      <input type=\"text\" id=\"user\" placeholder=\"Your Username\" />\r\n      <br />\r\n      <select id=\"userRole\">\r\n        <option value=\"App User\">App User</option>\r\n        <option value=\"Infrastructure Provider\">Infra Provider</option>\r\n        <option value=\"App Provider\">App Provider</option>\r\n      </select>\r\n      <button onClick={login} className=\"submit-btn\">\r\n        Login\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nimport \"./Navigation.css\";\r\n\r\nconst Navigation = (props) => {\r\n  return (\r\n    <nav className=\"nav\">\r\n      <ul>\r\n        <li >\r\n          {props.userRole === \"App Provider\" && (\r\n            <img src=\"developer.png\" alt=\"logo\"></img>\r\n          )}\r\n          {props.userRole === \"App User\" && (\r\n            <img src=\"user.png\" alt=\"logo\"></img>\r\n          )}\r\n          {props.userRole === \"Infrastructure Provider\" && (\r\n            <img src=\"provider.png\" alt=\"logo\"></img>\r\n          )}\r\n        </li>\r\n      \r\n        <li className=\"user\">{props.user}</li>\r\n        <li>\r\n          <div onClick={() => props.setLogin(false)}>Logout</div>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nimport \"./MainHeader.css\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst MainHeader = (props) => {\r\n  return (\r\n    <header className=\"main-header\">\r\n      <h2 className=\"role\">{props.userRole}</h2>\r\n      <Navigation setLogin={()=>props.setLogin(false)} userRole={props.userRole} user={props.user}/>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainHeader;\r\n","import React from \"react\";\r\n\r\nimport \"./MainFooter.css\";\r\n\r\n\r\nconst MainHeader = () => {\r\n  return (\r\n    <footer className=\"main-footer\">\r\n \r\n      <img src=\"DAI-Labor_Logo+TU.png\" alt=\"logo\"></img>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default MainHeader;\r\n","import React from \"react\";\r\nimport \"./LeftSideMenu.css\";\r\nconst APLeftSideMenu = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"sidebar-container\">\r\n        <div className=\"sidebar-logo\">ZIMO</div>\r\n        <ul className=\"sidebar-navigation\">\r\n          <li>\r\n            <div onClick={() => props.setMenu(\"CloudFlavour\")} className={`${props.menu===\"CloudFlavour\" ? \"active\" : \"\"} `}>\r\n              <i className=\"fa fa-home\" aria-hidden=\"true\"></i> Cloud Flavour\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div onClick={() => props.setMenu(\"NetworkFlavour\")} className={`${props.menu===\"NetworkFlavour\" ? \"active\" : \"\"} `}>\r\n              <i className=\"fa fa-home\" aria-hidden=\"true\"></i> Network Flavour\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div onClick={() => props.setMenu(\"DevApps\")} className={`${props.menu===\"DevApps\" ? \"active\" : \"\"} `}>\r\n              <i className=\"fa fa-tachometer\" aria-hidden=\"true\"></i> App\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div onClick={() => props.setMenu(\"AppInstances\")} className={`${props.menu===\"AppInstances\" ? \"active\" : \"\"} `}>\r\n              <i className=\"fa fa-tachometer\" aria-hidden=\"true\"></i> App\r\n              Instances\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div onClick={() => props.setMenu(\"AppMonitoring\")} className={`${props.menu===\"AppMonitoring\" ? \"active\" : \"\"} `}>\r\n              <i className=\"fa fa-tachometer\" aria-hidden=\"true\"></i> App\r\n              Monitoring\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        \r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default APLeftSideMenu;\r\n","import StarOutlineIcon from \"@material-ui/icons/StarOutline\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\n\r\nfunction getDistanceFromLatLonInKm(lat1, lng1, lat2, lng2) {\r\n  var R = 6371; // Radius of the earth in km\r\n  var dLat = deg2rad(lat2 - lat1); // deg2rad below\r\n  var dLon = deg2rad(lng2 - lng1);\r\n  var a =\r\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n    Math.cos(deg2rad(lat1)) *\r\n      Math.cos(deg2rad(lat2)) *\r\n      Math.sin(dLon / 2) *\r\n      Math.sin(dLon / 2);\r\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n  var d = R * c; // Distance in km\r\n  return d;\r\n}\r\n\r\nfunction deg2rad(deg) {\r\n  return deg * (Math.PI / 180);\r\n}\r\n\r\nconst setStar = (rate) => {\r\n  var a = new Array(5);\r\n  var i = 0;\r\n  for (i; i < rate; i++) {\r\n    a[i] = 1;\r\n  }\r\n  for (i; i < 5; i++) {\r\n    a[i] = 0;\r\n  }\r\n  return a.map((elem, index) => (\r\n    <span key={index}>\r\n      {elem === 1 && (\r\n        <span>\r\n          <StarIcon />\r\n        </span>\r\n      )}\r\n      {elem === 0 && (\r\n        <span>\r\n          <StarOutlineIcon />\r\n        </span>\r\n      )}\r\n    </span>\r\n  ));\r\n};\r\n\r\nconst serverurl = \"\"\r\nexport {getDistanceFromLatLonInKm,serverurl,setStar}","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport AddCircleOutlineTwoToneIcon from \"@material-ui/icons/AddCircleOutlineTwoTone\";\r\nimport \"./AddAppInstance.css\";\r\nimport { serverurl } from \"../../../../../logik/logik\";\r\nconst AddAppInstance = (props) => {\r\n  const [appList, setAppList] = useState([]);\r\n  const [cloudFlavourList, setCloudFlavourList] = useState([]);\r\n  const [networkFlavourList, setNetworkFlavourList] = useState([]);\r\n\r\n  const sendInfoToServer = async() => {\r\n    const importData = getAllData();\r\n    try {\r\n      fetch(`${serverurl}/appinstance`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(importData),\r\n      }).then(() => {\r\n        setShow(false);\r\n        props.refresh();\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    \r\n  };\r\n}\r\n  const getAllData = () => {\r\n    var zone = document.getElementById(\"Zone\").value;\r\n    var app = document.getElementById(\"App\").value;\r\n    var organization = props.user;\r\n    var CloudFlavour = document.getElementById(\"CloudFlavour\").value;\r\n    var NetworkFlavour = document.getElementById(\"NetworkFlavour\").value;\r\n    var data = {\r\n      \r\n      zone: zone,\r\n      organization:organization,\r\n      app: appList.find(elem=> elem._id===app),\r\n      cloudflavour: cloudFlavourList.find(elem=> elem._id===CloudFlavour),\r\n      networkflavour: networkFlavourList.find(elem=> elem._id===NetworkFlavour),\r\n      \r\n    };\r\n\r\n    return data;\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    try {\r\n      fetch(`${serverurl}/app?organization=${props.user}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setAppList(data);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"error!\");\r\n    }\r\n    try {\r\n      fetch(`${serverurl}/cloudflavour`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setCloudFlavourList(data);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"error!\");\r\n    }\r\n    try {\r\n      fetch(`${serverurl}/networkflavour`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setNetworkFlavourList(data);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"error!\");\r\n    }\r\n  }, [props.user]);\r\n\r\n\r\n\r\n\r\n  const [show, setShow] = useState(false);\r\n  return (\r\n    <div className=\"AddAppInstance\">\r\n      <AddCircleOutlineTwoToneIcon\r\n        type=\"button\"\r\n        className=\"AddButton\"\r\n        onClick={() => setShow(true)}\r\n      />\r\n      <Modal scrollable={true} show={show} onHide={() => setShow(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>App instance's information</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <table className=\"table\">\r\n            <tbody>\r\n              <tr>\r\n                <td>Zone</td>\r\n                <td>\r\n                  <select id=\"Zone\">\r\n                    <option value=\"Berlin\">Berlin</option>\r\n                    <option value=\"Hamburg\">Hamburg</option>\r\n                  </select>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>App[Ver]</td>\r\n                <td>\r\n                  <select id=\"App\">\r\n                    {appList.map((app) => (\r\n                      <option value={app._id} key={app._id} >\r\n                        {app.name}[v{app.version}]\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Organization</td>\r\n                <td>{props.user}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Cloud Flavour</td>\r\n                <td>\r\n                  <select id=\"CloudFlavour\">\r\n                    {cloudFlavourList.map((cloudflavour) => (\r\n                      <option value={cloudflavour._id} key={cloudflavour._id}>\r\n                        {cloudflavour.name}\r\n                        \r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Network Flavour</td>\r\n                <td>\r\n                  <select id=\"NetworkFlavour\">\r\n                    {networkFlavourList.map((networkflavour) => (\r\n                      <option value={networkflavour._id} key={networkflavour._id}>\r\n                        {networkflavour.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShow(false)}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={() => sendInfoToServer()} >Create</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddAppInstance;\r\n","import React, { useState,useEffect } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport \"./EditAppInstance.css\";\r\nimport SettingsTwoToneIcon from \"@material-ui/icons/SettingsTwoTone\";\r\nimport { serverurl } from \"../../../../../../logik/logik\";\r\nconst EditAppInstance = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  const [cloudFlavourList, setCloudFlavourList] = useState([]);\r\n  const [networkFlavourList, setNetworkFlavourList] = useState([]);\r\n\r\n  const sendInfoToServer = async() => {\r\n    const importData = getAllData();\r\n  \r\n    try {\r\n      fetch(`${serverurl}/appinstance?id=${props.appInstance._id}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(importData),\r\n      }).then(() => {\r\n        setShow(false);\r\n        props.refresh();\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getAllData = () => {\r\n    var zone = document.getElementById(\"Zone\").value;\r\n    var CloudFlavour = document.getElementById(\"CloudFlavour\").value;\r\n    var NetworkFlavour = document.getElementById(\"NetworkFlavour\").value;\r\n    var data = {\r\n      \r\n      zone: zone,\r\n      cloudflavour: cloudFlavourList.find(elem=> elem._id===CloudFlavour),\r\n      networkflavour: networkFlavourList.find(elem=> elem._id===NetworkFlavour),\r\n    };\r\n\r\n    return data;\r\n  };\r\n  useEffect(() => {\r\n    try {\r\n      fetch(`${serverurl}/cloudflavour`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setCloudFlavourList(data);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"error!\");\r\n    }\r\n    try {\r\n      fetch(`${serverurl}/networkflavour`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setNetworkFlavourList(data);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"error!\");\r\n    }\r\n  }, [props.user]);\r\n  return (\r\n    <div className=\"EditAppInstance\">\r\n      <SettingsTwoToneIcon\r\n        type=\"button\"\r\n        className=\"AddButton\"\r\n        onClick={() => setShow(true)}\r\n      />\r\n\r\n      <Modal scrollable={true} show={show} onHide={() => setShow(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>App instance's information</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <table className=\"table\">\r\n            <tbody>\r\n              <tr>\r\n                <td>Zone</td>\r\n                <td>\r\n                  <select id=\"Zone\" defaultValue={props.appInstance.zone}>\r\n                    <option value=\"Berlin\">Berlin</option>\r\n                    <option value=\"Hamburg\">Hamburg</option>\r\n                  </select>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>App[Ver]</td>\r\n                <td>\r\n                  {props.appInstance.app.name}[v{props.appInstance.app.version}]\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Organization</td>\r\n                <td>{props.appInstance.app.organization}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Cloud Flavour</td>\r\n                <td>\r\n                  <select id=\"CloudFlavour\" defaultValue={props.appInstance.cloudflavour._id}>\r\n                    {cloudFlavourList.map((cloudflavour) => (\r\n                      <option value={cloudflavour._id} key={cloudflavour._id}>\r\n                        {cloudflavour.name}\r\n                        \r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Network Flavour</td>\r\n                <td>\r\n                  <select id=\"NetworkFlavour\" defaultValue={props.appInstance.networkflavour._id}>\r\n                    {networkFlavourList.map((networkflavour) => (\r\n                      <option value={networkflavour._id} key={networkflavour._id}>\r\n                        {networkflavour.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n              </tr>\r\n              \r\n              \r\n       \r\n            </tbody>\r\n          </table>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShow(false)}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={sendInfoToServer}>\r\n            Update\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditAppInstance;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport \"./AppInstanceList.css\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditAppInstance from \"./EditAppInstance/EditAppInstance\";\r\nconst useSortableData = (items, config = null) => {\r\n  const [sortConfig, setSortConfig] = useState(config);\r\n  const sortedItems = useMemo(() => {\r\n    let sortableItems = [...items];\r\n    if (sortConfig !== null) {\r\n      sortableItems.sort((a, b) => {\r\n        if (\r\n          typeof a[sortConfig.key] === \"object\" &&\r\n          a[sortConfig.key].name < b[sortConfig.key].name\r\n        ) {\r\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\r\n        }\r\n        if (\r\n          typeof a[sortConfig.key] === \"object\" &&\r\n          a[sortConfig.key].name > b[sortConfig.key].name\r\n        ) {\r\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\r\n        }\r\n        if (a[sortConfig.key] < b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\r\n        }\r\n        if (a[sortConfig.key] > b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\r\n        }\r\n\r\n        return 0;\r\n      });\r\n    }\r\n    return sortableItems;\r\n  }, [items, sortConfig]);\r\n\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (\r\n      sortConfig &&\r\n      sortConfig.key === key &&\r\n      sortConfig.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\";\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  return { items: sortedItems, requestSort, sortConfig };\r\n};\r\n\r\nconst AppInstanceList = (props) => {\r\n  const { items, requestSort, sortConfig } = useSortableData(\r\n    props.AllAppInstances\r\n  );\r\n  const [filteredString, setFilteredString] = useState(\"\");\r\n  const [filteredItems, setFilteredItems] = useState(items);\r\n  const getClassNamesFor = (name) => {\r\n    if (!sortConfig) {\r\n      return;\r\n    }\r\n    return sortConfig.key === name ? sortConfig.direction : undefined;\r\n  };\r\n  useEffect(() => {\r\n    if (filteredString === \"\") {\r\n      setFilteredItems(items);\r\n    } else {\r\n      setFilteredItems(\r\n        items.filter((item) =>\r\n          Object.keys(item).some(\r\n            (elem) =>\r\n              elem !== \"_id\" &&\r\n              (String(item[elem]).includes(filteredString) ||\r\n                String(item[elem].name).includes(filteredString)||String(item[elem].name).includes(filteredString))\r\n          )\r\n        )\r\n      );\r\n    }\r\n  }, [filteredString, items]);\r\n\r\n  return (\r\n    <div className=\"AppInstanceList\">\r\n      <div className=\"filter\">\r\n        <input\r\n          className=\"inputfilter\"\r\n          value={filteredString}\r\n          onChange={(e) => {\r\n            setFilteredString(e.target.value);\r\n          }}\r\n          placeholder=\"Filter\"\r\n        />\r\n      </div>\r\n      <table className=\"table table-striped table-hover\">\r\n        <thead>\r\n          <tr className=\"row g-0\">\r\n            <th className=\"col\">\r\n              <div\r\n                onClick={() => requestSort(\"zone\")}\r\n                className={getClassNamesFor(\"zone\")}\r\n              >\r\n                Zone\r\n              </div>\r\n            </th>\r\n            <th className=\"col\">\r\n              <div\r\n                onClick={() => requestSort(\"organization\")}\r\n                className={getClassNamesFor(\"organization\")}\r\n              >\r\n                Organization\r\n              </div>\r\n            </th>\r\n            <th className=\"col\">\r\n              <div\r\n                onClick={() => requestSort(\"app\")}\r\n                className={getClassNamesFor(\"app\")}\r\n              >\r\n                Apps[Ver]\r\n              </div>\r\n            </th>\r\n\r\n            <th className=\"col\">\r\n              <div\r\n                onClick={() => requestSort(\"networkflavour\")}\r\n                className={getClassNamesFor(\"networkflavour\")}\r\n              >\r\n                Network Flavour\r\n              </div>\r\n            </th>\r\n            <th className=\"col\">\r\n              <div\r\n                onClick={() => requestSort(\"cloudflavour\")}\r\n                className={getClassNamesFor(\"cloudflavour\")}\r\n              >\r\n                Cloud Flavour\r\n              </div>\r\n            </th>\r\n            <th className=\"col\">\r\n              <div\r\n                onClick={() => requestSort(\"deploymentType\")}\r\n                className={getClassNamesFor(\"deploymentType\")}\r\n              >\r\n                Deployment Type\r\n              </div>\r\n            </th>\r\n\r\n            <th className=\"col-1\">Action</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody className=\"body\">\r\n          {filteredItems.map((item) => (\r\n            <tr\r\n              className={`row g-0 ${\r\n                props.selectedAppInstance === item ? \"active\" : \"\"\r\n              } `}\r\n              key={item._id}\r\n      \r\n            >\r\n              <td className=\"col\">{item.zone}</td>\r\n              <td className=\"col\">{item.app.organization}</td>\r\n              <td className=\"col\">\r\n                {item.app.name}[v{item.app.version}]\r\n              </td>\r\n\r\n              <td className=\"col\">{item.networkflavour.name}</td>\r\n              <td className=\"col\">{item.cloudflavour.name}</td>\r\n              <td className=\"col\">{item.app.deploymentType}</td>\r\n              <td className=\"col-1\">\r\n                <EditAppInstance appInstance={item} refresh={props.refresh}/>\r\n                <DeleteIcon className=\"button\" type=\"button\" onClick={() => props.deleteApp(item._id)}/>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppInstanceList;\r\n","import React,{useState,useCallback, useEffect} from \"react\";\r\nimport \"./AppInstances.css\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport AddAppInstance from \"./AddAppInstance/AddAppInstance\";\r\nimport AppInstanceList from \"./AppInstanceList/AppInstanceList\";\r\nimport {serverurl} from \"../../../../logik/logik\"\r\nexport default function AppInstances(props) {\r\n  const [appInstances, setAppInstances] = useState([]);\r\n  const deleteApp = (id) => {\r\n    fetch(`${serverurl}/appinstance?id=${id}`, {\r\n      method: \"DELETE\",\r\n    }).then(refresh);\r\n  };\r\n  const refresh = useCallback(() => {\r\n    try {\r\n      fetch(`${serverurl}/appinstance?organization=${props.user}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setAppInstances(data);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"error!\");\r\n    }\r\n  }, [props.user]);\r\n  useEffect(() => {\r\n    refresh();\r\n  }, [refresh]);\r\n\r\n  return (\r\n    <div className=\"AppInstances\">\r\n      <h2>\r\n        App Instances\r\n        <RefreshIcon type=\"button\" className=\"refreshButton\" onClick={refresh}/>\r\n        <AddAppInstance user={props.user} refresh={refresh}/>\r\n      </h2>\r\n\r\n      <div className=\"table-App-Instances\">\r\n        <AppInstanceList\r\n          AllAppInstances={appInstances}\r\n          deleteApp={deleteApp}\r\n          refresh={refresh}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport \"./AddApp.css\";\r\nimport AddCircleOutlineTwoToneIcon from \"@material-ui/icons/AddCircleOutlineTwoTone\";\r\nimport { serverurl } from \"../../../../../logik/logik\";\r\nconst AddApp = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  const [deploymentType,setDeploymentType]=useState(\"Docker\");\r\n  const sendInfoToServer = async() => {\r\n    const importData = getAllData();\r\n  \r\n    try {\r\n      fetch(`${serverurl}/app`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(importData),\r\n      }).then(() => {\r\n        setShow(false);\r\n        props.refresh();\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getAllData = () => {\r\n    var Region = document.getElementById(\"Region\").value;\r\n    var Organization = props.user;\r\n    var CloudFlavour = document.getElementById(\"CloudFlavour\").value;\r\n    var NetworkFlavour = document.getElementById(\"NetworkFlavour\").value;\r\n    var Name = document.getElementById(\"Name\").value;\r\n    var Version = document.getElementById(\"Version\").value;\r\n    var DeploymentType = document.getElementById(\"DeploymentType\").value;\r\n    //var ImageType = document.getElementById(\"ImageType\").value;\r\n    var Path = document.getElementById(\"Path\").value;\r\n    var data = {\r\n      Region: Region,\r\n      Organization: Organization,\r\n      CloudFlavour: CloudFlavour,\r\n      NetworkFlavour: NetworkFlavour,\r\n      Name: Name,\r\n      Version: Version,\r\n      DeploymentType: DeploymentType,\r\n      //ImageType: ImageType,\r\n      Path: Path,\r\n    };\r\n\r\n    return data;\r\n  };\r\n  return (\r\n    <div className=\"AddApp\">\r\n      <AddCircleOutlineTwoToneIcon\r\n        type=\"button\"\r\n        className=\"AddButton\"\r\n        onClick={() => setShow(true)}\r\n      />\r\n\r\n      <Modal scrollable={true} show={show} onHide={() => setShow(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>App's information</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <table className=\"table\">\r\n            <tbody>\r\n              <tr>\r\n                <td>Region</td>\r\n                <td>\r\n                  <select id=\"Region\">\r\n                    <option value=\"EU\">EU</option>\r\n                    <option value=\"US\">US</option>\r\n                  </select>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Organization</td>\r\n                <td>{props.user}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>App Name</td>\r\n                <td>\r\n                  <input id=\"Name\" type=\"text\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>App Version</td>\r\n                <td>\r\n                  <input id=\"Version\" type=\"number\" />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Deployment type</td>\r\n                <td>\r\n                  <select id=\"DeploymentType\" onChange={(e) => {\r\n                  setDeploymentType(e.target.value);\r\n                }} defaultValue=\"Docker\">\r\n                    <option value=\"Docker\">Docker</option>\r\n                    <option value=\"K8s\">Kubernetes</option>\r\n                    <option value=\"VM\">VM</option>\r\n                    <option value=\"Helm\">Helm</option>\r\n                  </select>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Image type</td>\r\n\r\n                <td>\r\n                {deploymentType}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Default Cloud Flavour</td>\r\n\r\n                <td>\r\n                  <select id=\"CloudFlavour\">\r\n                    <option value=\"S\">S</option>\r\n                    <option value=\"M\">M</option>\r\n                    <option value=\"L\">L</option>\r\n                    <option value=\"XL\">XL</option>\r\n                  </select>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Default Network Flavour</td>\r\n\r\n                <td>\r\n                  <select id=\"NetworkFlavour\">\r\n                    <option value=\"S\">S</option>\r\n                    <option value=\"M\">M</option>\r\n                    <option value=\"L\">L</option>\r\n                    <option value=\"XL\">XL</option>\r\n                  </select>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Path</td>\r\n                <td>\r\n                  <input id=\"Path\" type=\"text\" />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShow(false)}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={sendInfoToServer}>\r\n            Create\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddApp;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport \"./EditApp.css\";\r\nimport SettingsTwoToneIcon from \"@material-ui/icons/SettingsTwoTone\";\r\nimport { serverurl } from \"../../../../../../logik/logik\";\r\nconst EditApp = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  const [deploymentType,setDeploymentType]=useState(props.app.deploymentType);\r\n  const sendInfoToServer = async() => {\r\n    const importData = getAllData();\r\n  \r\n    try {\r\n      fetch(`${serverurl}/app?id=${props.app._id}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(importData),\r\n      }).then(() => {\r\n        setShow(false);\r\n        props.refresh();\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getAllData = () => {\r\n    var Region = document.getElementById(\"Region\").value;\r\n    var Organization = props.app.organization;\r\n    var CloudFlavour = document.getElementById(\"CloudFlavour\").value;\r\n    var NetworkFlavour = document.getElementById(\"NetworkFlavour\").value;\r\n    var Name = props.app.name;\r\n    var Version = props.app.version;\r\n    var DeploymentType = document.getElementById(\"DeploymentType\").value;\r\n    //var ImageType = document.getElementById(\"ImageType\").value;\r\n    var Path = document.getElementById(\"Path\").value;\r\n    var data = {\r\n      region: Region,\r\n      organization: Organization,\r\n      cloudflavour: CloudFlavour,\r\n      networkflavour: NetworkFlavour,\r\n      name: Name,\r\n      version: Version,\r\n      deploymentType: DeploymentType,\r\n      //ImageType: ImageType,\r\n      Path: Path,\r\n    };\r\n    return data;\r\n  };\r\n  return (\r\n    <div className=\"EditApp\">\r\n      <SettingsTwoToneIcon\r\n        type=\"button\"\r\n        className=\"AddButton\"\r\n        onClick={() => setShow(true)}\r\n      />\r\n\r\n      <Modal scrollable={true} show={show} onHide={() => setShow(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>App's information</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <table className=\"table\">\r\n            <tbody>\r\n              <tr>\r\n                <td>Region</td>\r\n                <td>\r\n                  <select id=\"Region\" defaultValue={props.app.region}>\r\n                    <option value=\"EU\">EU</option>\r\n                    <option value=\"US\">US</option>\r\n                  </select>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Organization</td>\r\n                <td>{props.app.organization}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>App Name</td>\r\n                <td>\r\n                  {props.app.name}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>App Version</td>\r\n                <td>\r\n                  {props.app.version}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Deployment type</td>\r\n                <td>\r\n                  <select id=\"DeploymentType\" onChange={(e) => {\r\n                  setDeploymentType(e.target.value);\r\n                }} defaultValue={props.app.deploymentType}>\r\n                    <option value=\"Docker\">Docker</option>\r\n                    <option value=\"K8s\">Kubernetes</option>\r\n                    <option value=\"VM\">VM</option>\r\n                    <option value=\"Helm\">Helm</option>\r\n                  </select>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Image type</td>\r\n\r\n                <td>\r\n                {deploymentType}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Default Cloud Flavour</td>\r\n\r\n                <td>\r\n                  <select id=\"CloudFlavour\" defaultValue={props.app.cloudflavour}>\r\n                    <option value=\"S\">S</option>\r\n                    <option value=\"M\">M</option>\r\n                    <option value=\"L\">L</option>\r\n                    <option value=\"XL\">XL</option>\r\n                  </select>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Default Network Flavour</td>\r\n\r\n                <td>\r\n                  <select id=\"NetworkFlavour\" defaultValue={props.app.networkflavour}>\r\n                    <option value=\"S\">S</option>\r\n                    <option value=\"M\">M</option>\r\n                    <option value=\"L\">L</option>\r\n                    <option value=\"XL\">XL</option>\r\n                  </select>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Path</td>\r\n                <td>\r\n                  <input id=\"Path\" type=\"text\" />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShow(false)}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={sendInfoToServer}>\r\n            Update\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditApp;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport \"./DevAppsList.css\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditApp from \"./EditApp/EditApp\";\r\nconst useSortableData = (items, config = null) => {\r\n  const [sortConfig, setSortConfig] = useState(config);\r\n  const sortedItems = useMemo(() => {\r\n    let sortableItems = [...items];\r\n    if (sortConfig !== null) {\r\n      sortableItems.sort((a, b) => {\r\n        /*if (\r\n          typeof a[sortConfig.key] === \"object\" &&\r\n          a[sortConfig.key].name < b[sortConfig.key].name\r\n        ) {\r\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\r\n        }\r\n        if (\r\n          typeof a[sortConfig.key] === \"object\" &&\r\n          a[sortConfig.key].name > b[sortConfig.key].name\r\n        ) {\r\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\r\n        }*/\r\n        if (a[sortConfig.key] < b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\r\n        }\r\n        if (a[sortConfig.key] > b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\r\n        }\r\n\r\n        return 0;\r\n      });\r\n    }\r\n    return sortableItems;\r\n  }, [items, sortConfig]);\r\n\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (\r\n      sortConfig &&\r\n      sortConfig.key === key &&\r\n      sortConfig.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\";\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  return { items: sortedItems, requestSort, sortConfig };\r\n};\r\n\r\nconst DevAppsList = (props) => {\r\n  const { items, requestSort, sortConfig } = useSortableData(props.AppsList);\r\n  const [filteredString, setFilteredString] = useState(\"\");\r\n  const [filteredItems, setFilteredItems] = useState(items);\r\n  const getClassNamesFor = (name) => {\r\n    if (!sortConfig) {\r\n      return;\r\n    }\r\n    return sortConfig.key === name ? sortConfig.direction : undefined;\r\n  };\r\n  useEffect(() => {\r\n    if (filteredString === \"\") {\r\n      setFilteredItems(items);\r\n    } else {\r\n      setFilteredItems(\r\n        items.filter((item) =>\r\n          Object.keys(item).some(\r\n            (elem) =>\r\n              elem !== \"_id\" &&\r\n              (String(item[elem]).includes(filteredString) ||\r\n                String(item[elem].provider).includes(filteredString))\r\n          )\r\n        )\r\n      );\r\n    }\r\n  }, [filteredString, items]);\r\n\r\n  return (\r\n    <div className=\"DevAppsList\">\r\n      <div className=\"filter\">\r\n        <input\r\n          className=\"inputfilter\"\r\n          value={filteredString}\r\n          onChange={(e) => {\r\n            setFilteredString(e.target.value);\r\n          }}\r\n          placeholder=\"Filter\"\r\n        />\r\n      </div>\r\n      <table className=\"table table-striped table-hover\">\r\n        <thead>\r\n          <tr className=\"row g-0\">\r\n            <th className=\"col-1\">\r\n              <div\r\n                onClick={() => requestSort(\"region\")}\r\n                className={getClassNamesFor(\"region\")}\r\n              >\r\n                Region\r\n              </div>\r\n            </th>\r\n            <th className=\"col-2\">\r\n              <div\r\n                onClick={() => requestSort(\"organization\")}\r\n                className={getClassNamesFor(\"organization\")}\r\n              >\r\n                Organization\r\n              </div>\r\n            </th>\r\n            <th className=\"col-2\">\r\n              <div\r\n                onClick={() => requestSort(\"name\")}\r\n                className={getClassNamesFor(\"name\")}\r\n              >\r\n                Name\r\n              </div>\r\n            </th>\r\n            <th className=\"col-1\">\r\n              <div\r\n                onClick={() => requestSort(\"version\")}\r\n                className={getClassNamesFor(\"version\")}\r\n              >\r\n                Version\r\n              </div>\r\n            </th>\r\n            <th className=\"col\">\r\n              <div\r\n                onClick={() => requestSort(\"flavour\")}\r\n                className={getClassNamesFor(\"flavour\")}\r\n              >\r\n                Dflt. Network Flavour\r\n              </div>\r\n            </th>\r\n\r\n            <th className=\"col\">\r\n              <div\r\n                onClick={() => requestSort(\"name\")}\r\n                className={getClassNamesFor(\"name\")}\r\n              >\r\n                Dflt. Cloud Flavour\r\n              </div>\r\n            </th>\r\n            <th className=\"col\">\r\n              <div\r\n                onClick={() => requestSort(\"deploymentType\")}\r\n                className={getClassNamesFor(\"deploymentType\")}\r\n              >\r\n                Deployment Type\r\n              </div>\r\n            </th>\r\n\r\n            <th className=\"col-1\">Action</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody className=\"body\">\r\n          {filteredItems.map((item) => (\r\n            <tr\r\n              className={`row g-0 ${\r\n                props.selectedAppInstance === item ? \"active\" : \"\"\r\n              } `}\r\n              key={item._id}\r\n            >\r\n              <td className=\"col-1\">{item.region}</td>\r\n              <td className=\"col-2\">{item.organization}</td>\r\n              <td className=\"col-2\">{item.name}</td>\r\n              <td className=\"col-1\">{item.version}</td>\r\n              <td className=\"col\">{item.cloudflavour}</td>\r\n              <td className=\"col\">{item.networkflavour}</td>\r\n              <td className=\"col\">{item.deploymentType}</td>\r\n              <td className=\"col-1\">\r\n                <EditApp app={item} refresh={props.refresh}/>\r\n                <DeleteIcon\r\n                  className=\"button\"\r\n                  type=\"button\"\r\n                  onClick={() => props.deleteApp(item._id)}\r\n                />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DevAppsList;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./DevApps.css\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport AddApp from \"./AddApp/AddApp\";\r\nimport DevAppsList from \"./DevAppsList/DevAppsList\";\r\nimport { serverurl } from \"../../../../logik/logik\";\r\nexport default function DevApps(props) {\r\n  const deleteApp = (id) => {\r\n    fetch(`${serverurl}/app?id=${id}`, {\r\n      method: \"DELETE\",\r\n    }).then(refresh);\r\n  };\r\n  const [apps, setApps] = useState([]);\r\n  const refresh = useCallback(() => {\r\n    try {\r\n      fetch(`${serverurl}/app?organization=${props.user}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setApps(data);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"error!\");\r\n    }\r\n  }, [props.user]);\r\n  useEffect(() => {\r\n    refresh();\r\n  }, [refresh]);\r\n  return (\r\n    <div className=\"DevApps\">\r\n      <h2>\r\n        Apps\r\n        <RefreshIcon\r\n          type=\"button\"\r\n          className=\"refreshButton\"\r\n          onClick={() => refresh()}\r\n        />\r\n        <AddApp refresh={refresh} user={props.user} />\r\n      </h2>\r\n\r\n      <DevAppsList AppsList={apps} deleteApp={deleteApp} refresh={refresh}/>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport \"./ProductTable.css\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsTwoToneIcon from '@material-ui/icons/SettingsTwoTone';\r\nconst useSortableData = (items, config = null) => {\r\n  const [sortConfig, setSortConfig] = useState(config);\r\n  const sortedItems = useMemo(() => {\r\n    let sortableItems = [...items];\r\n    if (sortConfig !== null) {\r\n      sortableItems.sort((a, b) => {\r\n        if (a[sortConfig.key] < b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\r\n        }\r\n        if (a[sortConfig.key] > b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n    return sortableItems;\r\n  }, [items, sortConfig]);\r\n\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (\r\n      sortConfig &&\r\n      sortConfig.key === key &&\r\n      sortConfig.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\";\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  return { items: sortedItems, requestSort, sortConfig };\r\n};\r\n\r\nconst ProductTable = (props) => {\r\n  const { items, requestSort, sortConfig } = useSortableData(props.rows);\r\n  const [filteredString, setFilteredString] = useState(\"\");\r\n  const [filteredItems, setFilteredItems] = useState(items);\r\n  const getClassNamesFor = (name) => {\r\n    if (!sortConfig) {\r\n      return;\r\n    }\r\n    return sortConfig.key === name ? sortConfig.direction : undefined;\r\n  };\r\n  useEffect(() => {\r\n    if (filteredString === \"\") {\r\n      setFilteredItems(items);\r\n    } else {\r\n      setFilteredItems(\r\n        items.filter((item) =>\r\n          Object.keys(item).some(\r\n            (elem) =>\r\n              elem !== \"_id\" &&\r\n              String(item[elem]).includes(filteredString)\r\n          )\r\n        )\r\n      );\r\n    }\r\n  }, [filteredString, items]);\r\n\r\n  return (\r\n    <div className=\"ProductTable\">\r\n      <div className=\"filter\">\r\n        <input className=\"inputfilter\"\r\n          value={filteredString}\r\n          onChange={(e) => {\r\n            setFilteredString(e.target.value);\r\n          }}\r\n          placeholder=\"Filter\"\r\n        />\r\n      </div>\r\n      <table className=\"table table-striped table-hover\">\r\n        <thead>\r\n          <tr className=\"row g-0\">\r\n            {props.columns.map((column) => (\r\n              <th className=\"col\" key={column.label}>\r\n                <div\r\n                  onClick={() => requestSort(column.API)}\r\n                  className={getClassNamesFor(column.API)}\r\n                >\r\n                  {column.label}\r\n                </div>\r\n              </th>\r\n            ))}\r\n            {props.action === true && <th className=\"col\">Action</th>}\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody className=\"body\">\r\n          {filteredItems.map((item) => (\r\n            <tr className=\"row g-0\" key={item._id}>\r\n              {Object.keys(item).map(\r\n                (elem, i) =>\r\n                  elem !== \"_id\" && (\r\n                    <td key={i} className=\"col\">\r\n                      {item[elem]}\r\n                    </td>\r\n                  )\r\n              )}\r\n              {props.action === true && (\r\n                <td className=\"col\">\r\n                  <SettingsTwoToneIcon className=\"button\" type=\"button\" onClick={() => console.log(item)}/>\r\n                  <DeleteIcon className=\"button\" type=\"button\" onClick={()=>props.delete(item._id)}/>\r\n                </td>\r\n              )}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductTable;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./CloudFlavour.css\";\r\nimport ProductTable from \"../../../UI/ProductTable\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport { serverurl } from \"../../../../logik/logik\";\r\nexport default function CloudFlavour() {\r\n  const [flavours, setFlavours] = useState([]);\r\n  const refresh = () => {\r\n    try {\r\n      fetch(`${serverurl}/cloudflavour`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          let flavours = data.map(\r\n            ({ _id, name, user, CPU, RAM, storage, nwMbps }) => ({\r\n              _id,\r\n              name,\r\n              user,\r\n              CPU,\r\n              RAM,\r\n              storage,\r\n              nwMbps,\r\n            })\r\n          );\r\n          setFlavours(flavours);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"error!\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    refresh()\r\n  }, []);\r\n  \r\n  return (\r\n    <div className=\"Flavour\">\r\n      <h2>\r\n        Cloud Flavour\r\n        <RefreshIcon\r\n          type=\"button\"\r\n          className=\"refreshButton\"\r\n          onClick={() => refresh()}\r\n        />\r\n      </h2>\r\n      <ProductTable\r\n        columns={[\r\n          { label: \"Name\", API: \"name\" },\r\n          { label: \"#User\", API: \"user\" },\r\n          { label: \"CPU\", API: \"CPU\" },\r\n          { label: \"RAM\", API: \"RAM\" },\r\n          { label: \"Storage\", API: \"storage\" },\r\n          { label: \"NW Mbps\", API: \"nwMbps\" },\r\n        ]}\r\n        rows={flavours}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport \"./NetworkFlavourInformation.css\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nconst NetworkFlavourInformation = (props) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  return (\r\n    <div className=\"AddApp\">\r\n      <InfoIcon\r\n        type=\"button\"\r\n        className=\"AddButton\"\r\n        onClick={() => setShow(true)}\r\n      />\r\n\r\n      <Modal\r\n        scrollable={true}\r\n        show={show}\r\n        onHide={() => setShow(false)}\r\n        size=\"xl\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Network Flavour's information</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <table className=\"table\">\r\n            <tbody>\r\n              <tr>\r\n                <td colSpan=\"3\">Area of Service</td>\r\n                <td>\r\n                  EU\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Area of Service: Region Specification</td>\r\n                <td>\r\n                  EU\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Area of Service: Region Specification</td>\r\n                <td>\r\n                  EU\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Availability</td>\r\n                <td>\r\n                 EU\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Data network access</td>\r\n                <td>\r\n                 \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  Data network access: Data access per data network\r\n                </td>\r\n                <td>\r\n              \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Data network access: Tunneling mechanism</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Delay tolerance</td>\r\n                <td>\r\n                {props.NetWorkFlavour.delay}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Deterministic communication</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Deterministic communication: Availability</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Deterministic communication: Periodicity</td>\r\n                <td>\r\n                \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Deterministic communication: Periodicity</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Downlink throughput per UE</td>\r\n                <td>\r\n                {props.NetWorkFlavour.downlink}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  Downlink throughput per UE: Guaranteed downlink throughput\r\n                </td>\r\n                <td>\r\n                {props.NetWorkFlavour.downlink}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  Downlink throughput per UE: Maximum downlink throughput\r\n                </td>\r\n                <td>\r\n                {props.NetWorkFlavour.downlink}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Downlink throughput per network slice</td>\r\n                <td>\r\n                {props.NetWorkFlavour.downlink}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  Downlink throughput per network slice: Guaranteed downlink\r\n                  throughput\r\n                </td>\r\n                <td>\r\n                {props.NetWorkFlavour.downlink}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  Downlink throughput per network slice: Maximum downlink\r\n                  throughput\r\n                </td>\r\n                <td>\r\n                {props.NetWorkFlavour.downlink}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Energy efficiency</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  Energy efficiency: Network slice enery efficiency\r\n                </td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  Energy efficiency: Time frame of the measurement\r\n                </td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Group communication support</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Isolation level: Isolation</td>\r\n                <td>\r\n               \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Isolation level: Logical Isolation</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Isolation level: Physical Isolation</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Location based message delivery</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">MMTel support</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Maximum supported packet size</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  Mission critical support: Mission-critical capability support\r\n                </td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  Mission critical support: Mission-critical service support\r\n                </td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">NB-IoT support</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Network Slice Customer network functions</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Number of connections</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Number of terminals</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Performance monitoring</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Performance monitoring: Availability</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  Performance monitoring: Prediction frequency\r\n                </td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Positioning support</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Positioning support: Accuracy</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Positioning support: Availability</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Positioning support: Prediction frequency</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Radio spectrum</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Root cause investigation</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Session and Service Continuity support</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Simltaneous use of the network slice</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Slice quality of service parameters</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  Slice quality of service parameters: Maximum Packet LossRate\r\n                </td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  Slice quality of service parameters: Packet Delay Budget\r\n                </td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  Slice quality of service parameters: Packet Error Rate\r\n                </td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  Slice quality of service parameters: Priority Level\r\n                </td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  Slice quality of service parameters: Ressource Type\r\n                </td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Support for non-IP traffic</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Supported device velocity</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Synchronicity</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Synchronicity: Accuracy</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Synchronicity: Availability</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Terminal density</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Uplink throughput per UE</td>\r\n                <td>\r\n                {props.NetWorkFlavour.uplink}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  Uplink throughput per UE: Guaranteed uplink throughput\r\n                </td>\r\n                <td>\r\n                {props.NetWorkFlavour.uplink}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  Uplink throughput per UE: Maximum uplink throughput\r\n                </td>\r\n                <td>\r\n                {props.NetWorkFlavour.uplink}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">Uplink throughput per network slice</td>\r\n                <td>\r\n                {props.NetWorkFlavour.uplink}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  Uplink throughput per network slice: Guaranteed uplink\r\n                  throughput\r\n                </td>\r\n                <td>\r\n                {props.NetWorkFlavour.uplink}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">\r\n                  Uplink throughput per network slice: Maximum uplink throughput\r\n                </td>\r\n                <td>\r\n                {props.NetWorkFlavour.uplink}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">User data access</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">User data access: Data access</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">User data access: Tunnelling mechanism</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">User management openness</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"3\">V2X communication mode</td>\r\n                <td>\r\n                  \r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShow(false)}>\r\n            Close\r\n          </Button>\r\n          \r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NetworkFlavourInformation;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport NetworkFlavourInformation from \"./NetworkFlavourInformation/NetworkFlavourInformation\";\r\nimport \"./NetworkFlavourList.css\";\r\n\r\nconst useSortableData = (items, config = null) => {\r\n  const [sortConfig, setSortConfig] = useState(config);\r\n  const sortedItems = useMemo(() => {\r\n    let sortableItems = [...items];\r\n    if (sortConfig !== null) {\r\n      sortableItems.sort((a, b) => {\r\n        if (a[sortConfig.key] < b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\r\n        }\r\n        if (a[sortConfig.key] > b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\r\n        }\r\n\r\n        return 0;\r\n      });\r\n    }\r\n    return sortableItems;\r\n  }, [items, sortConfig]);\r\n\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (\r\n      sortConfig &&\r\n      sortConfig.key === key &&\r\n      sortConfig.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\";\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  return { items: sortedItems, requestSort, sortConfig };\r\n};\r\n\r\nconst NetworkFlavourList = (props) => {\r\n  const { items, requestSort, sortConfig } = useSortableData(\r\n    props.AllNetworkFlavour\r\n  );\r\n  const [filteredString, setFilteredString] = useState(\"\");\r\n  const [filteredItems, setFilteredItems] = useState(items);\r\n  const getClassNamesFor = (name) => {\r\n    if (!sortConfig) {\r\n      return;\r\n    }\r\n    return sortConfig.key === name ? sortConfig.direction : undefined;\r\n  };\r\n  useEffect(() => {\r\n    if (filteredString === \"\") {\r\n      setFilteredItems(items);\r\n    } else {\r\n      setFilteredItems(\r\n        items.filter((item) =>\r\n          Object.keys(item).some(\r\n            (elem) =>\r\n              elem !== \"_id\" &&\r\n              (String(item[elem]).includes(filteredString) ||\r\n                String(item[elem].provider).includes(filteredString))\r\n          )\r\n        )\r\n      );\r\n    }\r\n  }, [filteredString, items]);\r\n\r\n  return (\r\n    <div className=\"NetworkFlavourList\">\r\n      <div className=\"filter\">\r\n        <input\r\n          className=\"inputfilter\"\r\n          value={filteredString}\r\n          onChange={(e) => {\r\n            setFilteredString(e.target.value);\r\n          }}\r\n          placeholder=\"Filter\"\r\n        />\r\n      </div>\r\n      <table className=\"table table-striped table-hover\">\r\n        <thead>\r\n          <tr className=\"row g-0\">\r\n            <th className=\"col\">\r\n              <div\r\n                onClick={() => requestSort(\"name\")}\r\n                className={getClassNamesFor(\"name\")}\r\n              >\r\n                Name\r\n              </div>\r\n            </th>\r\n            <th className=\"col\">\r\n              <div\r\n                onClick={() => requestSort(\"delay\")}\r\n                className={getClassNamesFor(\"delay\")}\r\n              >\r\n                Delay Tolerance\r\n              </div>\r\n            </th>\r\n            <th className=\"col\">\r\n              <div\r\n                onClick={() => requestSort(\"downlink\")}\r\n                className={getClassNamesFor(\"downlink\")}\r\n              >\r\n                Downlink throughput\r\n              </div>\r\n            </th>\r\n            <th className=\"col\">\r\n              <div\r\n                onClick={() => requestSort(\"uplink\")}\r\n                className={getClassNamesFor(\"uplink\")}\r\n              >\r\n                Uplink throughput\r\n              </div>\r\n            </th>\r\n            <th className=\"col-1\"></th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody className=\"body\">\r\n          {filteredItems.map((item) => (\r\n            <tr className=\"row g-0\" key={item._id}>\r\n              <td className=\"col\">{item.name}</td>\r\n              <td className=\"col\">{item.delay}</td>\r\n              <td className=\"col\">{item.downlink}</td>\r\n              <td className=\"col\">{item.uplink}</td>\r\n\r\n              <td className=\"col-1\">\r\n                <NetworkFlavourInformation NetWorkFlavour={item} />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NetworkFlavourList;\r\n","import React,{useState, useEffect} from \"react\";\r\nimport \"./NetworkFlavour.css\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport NetworkFlavourList from \"./NetworkFlavourList/NetworkFlavourList\";\r\nimport { serverurl } from \"../../../../logik/logik\";\r\nexport default function NetworkFlavour() {\r\n  const [flavours, setFlavours] = useState([]);\r\n  const refresh = () => {\r\n    try {\r\n      fetch(`${serverurl}/networkflavour`)\r\n        .then((response) => response.json())\r\n        .then((data) => setFlavours(data)\r\n        );\r\n    } catch (error) {\r\n      console.log(\"error!\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    refresh()\r\n  }, []);\r\n  return (\r\n    <div className=\"NetworkFlavour\">\r\n      <h2>\r\n        Network Flavour\r\n        <RefreshIcon type=\"button\" className=\"refreshButton\" />\r\n      </h2>\r\n\r\n      <NetworkFlavourList AllNetworkFlavour={flavours} />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { GoogleMap, Marker, Circle, InfoWindow } from \"@react-google-maps/api\";\r\nimport \"./Map.css\";\r\nimport MapStyle from \"./MapStyle\";\r\nconst mapContainerStyle = {\r\n  width: \"100%\",\r\n  height: \"49vh\",\r\n  float: \"left\",\r\n};\r\nconst center = {\r\n  lat: 52.51651,\r\n  lng: 13.33578,\r\n};\r\n\r\nconst options = {\r\n  styles: MapStyle,\r\n};\r\n\r\nconst Map = (props) => {\r\n  const [showCircle, setShowCircle] = useState(true);\r\n  return (\r\n    <div className=\"GoogleMapAppInstance\">\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={12}\r\n        center={center}\r\n        options={options}\r\n        onLoad={props.onMapLoad}\r\n        onClick={props.onMapClick}\r\n      >\r\n        {props.AppInstanceList.map((appInstance) => (\r\n          <div key={appInstance._id}>\r\n            <Marker\r\n              position={appInstance.cloud.position}\r\n              icon={{\r\n                url: \"/Cloud.png\",\r\n                scaledSize: new window.google.maps.Size(30, 30),\r\n                origin: new window.google.maps.Point(0, 0),\r\n                anchor: new window.google.maps.Point(15, 15),\r\n              }}\r\n              onClick={() => {\r\n                props.setSelectedAppInstance(appInstance);\r\n              }}\r\n            />\r\n\r\n            {(appInstance.status===\"scheduled\"||appInstance.status===\"running\")&&showCircle && (\r\n              <Circle\r\n                center={appInstance.network.position}\r\n                radius={appInstance.network.radius * 1000}\r\n                options={{}}\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n        {props.selectedAppInstance ? (\r\n          <InfoWindow\r\n            position={props.selectedAppInstance.cloud.position}\r\n            onCloseClick={() => {\r\n              props.setSelectedAppInstance(null);\r\n            }}\r\n          >\r\n            <div>\r\n              <h2>{props.selectedAppInstance.name}</h2>\r\n              <p>{props.selectedAppInstance.organization}</p>\r\n            </div>\r\n          </InfoWindow>\r\n        ) : null}\r\n        <button\r\n          className=\"button\"\r\n          variant=\"primary\"\r\n          onClick={() => setShowCircle(!showCircle)}\r\n        >\r\n          Coverage\r\n        </button>\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n};\r\nexport default Map;\r\n","\r\n\r\nconst MapStyle= [\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#444444\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f2f2f2\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": -100\r\n            },\r\n            {\r\n                \"lightness\": 45\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"simplified\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#c0e4f3\"\r\n            },\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n\r\nexport default MapStyle;","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport \"./AppMonitoringList.css\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SettingsTwoToneIcon from \"@material-ui/icons/SettingsTwoTone\";\r\nconst useSortableData = (items, config = null) => {\r\n  const [sortConfig, setSortConfig] = useState(config);\r\n  const sortedItems = useMemo(() => {\r\n    let sortableItems = [...items];\r\n    if (sortConfig !== null) {\r\n      sortableItems.sort((a, b) => {\r\n        \r\n        if (typeof(a[sortConfig.key]) ===\"object\"&&a[sortConfig.key].provider < b[sortConfig.key].provider) {\r\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\r\n        }\r\n        if (typeof(a[sortConfig.key]) ===\"object\" && a[sortConfig.key].provider > b[sortConfig.key].provider) {\r\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\r\n        }\r\n        if (a[sortConfig.key] < b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\r\n        }\r\n        if (a[sortConfig.key] > b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\r\n        }\r\n       \r\n\r\n        return 0;\r\n      });\r\n    }\r\n    return sortableItems;\r\n  }, [items, sortConfig]);\r\n\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (\r\n      sortConfig &&\r\n      sortConfig.key === key &&\r\n      sortConfig.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\";\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  return { items: sortedItems, requestSort, sortConfig };\r\n};\r\n\r\nconst AppMonitoringList = (props) => {\r\n  const { items, requestSort, sortConfig } = useSortableData(\r\n    props.AllAppInstances\r\n  );\r\n  const [filteredString, setFilteredString] = useState(\"\");\r\n  const [filteredItems, setFilteredItems] = useState(items);\r\n  const getClassNamesFor = (name) => {\r\n    if (!sortConfig) {\r\n      return;\r\n    }\r\n    return sortConfig.key === name ? sortConfig.direction : undefined;\r\n  };\r\n  useEffect(() => {\r\n    if (filteredString === \"\") {\r\n      setFilteredItems(items);\r\n    } else {\r\n      setFilteredItems(\r\n        items.filter((item) =>\r\n          Object.keys(item).some(\r\n            (elem) =>\r\n              elem !== \"_id\" && (String(item[elem]).includes(filteredString) || String(item[elem].provider).includes(filteredString) )\r\n          )\r\n        )\r\n      );\r\n    }\r\n  }, [filteredString, items]);\r\n\r\n  return (\r\n    <div className=\"AppMonitoringList\">\r\n      <div className=\"filter\">\r\n        <input\r\n          className=\"inputfilter\"\r\n          value={filteredString}\r\n          onChange={(e) => {\r\n            setFilteredString(e.target.value);\r\n          }}\r\n          placeholder=\"Filter\"\r\n        />\r\n      </div>\r\n      <table className=\"table table-striped table-hover\">\r\n        <thead>\r\n          <tr className=\"row g-0\">\r\n            <th className=\"col\">\r\n              <div\r\n                onClick={() => requestSort(\"zone\")}\r\n                className={getClassNamesFor(\"zone\")}\r\n              >\r\n                Zone\r\n              </div>\r\n            </th>\r\n            <th className=\"col\">\r\n              <div\r\n                onClick={() => requestSort(\"organization\")}\r\n                className={getClassNamesFor(\"organization\")}\r\n              >\r\n                Organization\r\n              </div>\r\n            </th>\r\n            <th className=\"col\">\r\n              <div\r\n                onClick={() => requestSort(\"name\")}\r\n                className={getClassNamesFor(\"name\")}\r\n              >\r\n                Apps[Ver]\r\n              </div>\r\n            </th>\r\n            <th className=\"col\">\r\n              <div\r\n                onClick={() => requestSort(\"deploymentType\")}\r\n                className={getClassNamesFor(\"deploymentType\")}\r\n              >\r\n                Deployment Type\r\n              </div>\r\n            </th>\r\n            <th className=\"col\">\r\n              <div\r\n                onClick={() => requestSort(\"network\")}\r\n                className={getClassNamesFor(\"network\")}\r\n              >\r\n                Network[Flavour]\r\n              </div>\r\n            </th>\r\n            <th className=\"col\">\r\n              <div\r\n                onClick={() => requestSort(\"cloud\")}\r\n                className={getClassNamesFor(\"cloud\")}\r\n              >\r\n                Cloud[Flavour]\r\n              </div>\r\n            </th>\r\n            <th className=\"col\">\r\n              <div\r\n                onClick={() => requestSort(\"status\")}\r\n                className={getClassNamesFor(\"status\")}\r\n              >\r\n                Status\r\n              </div>\r\n            </th>\r\n            <th className=\"col\">Action</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody className=\"body\">\r\n          {filteredItems.map((item) => (\r\n            <tr\r\n              className= {`row g-0 ${props.selectedAppInstance===item ? \"active\" : \"\"} `}\r\n              key={item._id}\r\n              onClick={() => {\r\n                props.setSelectedAppInstance(item)\r\n              }}\r\n\r\n            >\r\n              <td className=\"col\">{item.zone}</td>\r\n              <td className=\"col\">{item.organization}</td>\r\n              <td className=\"col\">\r\n                {item.name}[v{item.version}]\r\n              </td>\r\n              <td className=\"col\">{item.deploymentType}</td>\r\n              <td className=\"col\">{item.network&&item.network.provider} [{item.networkflavour}]</td>\r\n              <td className=\"col\">{item.cloud.provider}[{item.cloudflavour}]</td>\r\n              <td className=\"col\">{item.status}</td>\r\n              <td className=\"col\">\r\n                <SettingsTwoToneIcon className=\"button\" type=\"button\" />\r\n                <DeleteIcon className=\"button\" type=\"button\" />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppMonitoringList;\r\n","import \"./Chart.css\";\r\nimport moment from \"moment\"\r\nimport {\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Legend,\r\n  Tooltip,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n} from \"recharts\";\r\n\r\n// Sample chart data\r\nconst now = new Date().getTime();\r\nvar date = new Date(now);\r\nvar hour=3600000\r\nconst data = [\r\n  {\r\n    name: date,\r\n    value: 5,\r\n  },\r\n  {\r\n    name: new Date(now+hour),\r\n    value: 5,\r\n  },\r\n  {\r\n    name: new Date(now+2*hour),\r\n    value: 5,\r\n  },\r\n  {\r\n    name: new Date(now+3*hour),\r\n    value: 20,\r\n  },\r\n  {\r\n    name: new Date(now+4*hour),\r\n    value: 5,\r\n  },\r\n  {\r\n    name: new Date(now+5*hour),\r\n    value: 5,\r\n  },\r\n  {\r\n    name: new Date(now+6*hour),\r\n    value: 5,\r\n  },\r\n  {\r\n    name: new Date(now+7*hour),\r\n    value: 15,\r\n  },\r\n  {\r\n    name: new Date(now+8*hour),\r\n    value: 5,\r\n  },\r\n  {\r\n    name: new Date(now+9*hour),\r\n    value: 5,\r\n  },\r\n  {\r\n    name: new Date(now+10*hour),\r\n    value: 5,\r\n  },\r\n  {\r\n    name: new Date(now+11*hour),\r\n    value: 5,\r\n  },\r\n  {\r\n    name: new Date(now+12*hour),\r\n    value: 5,\r\n  },\r\n];\r\n\r\nfunction ChartCPU() {\r\n  return (\r\n    <div className=\"ChartContainer\">\r\n      <h4 className=\"title\">CPU</h4>\r\n      <div className=\"Chart\">\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <LineChart data={data}> \r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis\r\n              dataKey=\"name\"\r\n              label={{ value: \"time\", position: \"insideBottomRight\", dy: 10 }}\r\n              tickFormatter={(unixTime) => moment(unixTime).format('HH:mm')}\r\n            />\r\n            <YAxis label={{ value: \"%\", position: \"insideTop\",dy: 10 }}></YAxis>\r\n            <Legend />\r\n            <Tooltip />\r\n            <Line type=\"monotone\" dataKey=\"value\" stroke=\"black\" />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartCPU;\r\n","import \"./Chart.css\";\r\nimport moment from \"moment\"\r\nimport {\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Legend,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n} from \"recharts\";\r\n\r\n// Sample chart data\r\nconst now = new Date().getTime();\r\nvar date = new Date(now);\r\nvar hour=3600000\r\nconst data = [\r\n  {\r\n    name: date,\r\n    value: 954,\r\n  },\r\n  {\r\n    name: new Date(now+hour),\r\n    value: 954,\r\n  },\r\n  {\r\n    name: new Date(now+2*hour),\r\n    value: 954,\r\n  },\r\n  {\r\n    name: new Date(now+3*hour),\r\n    value: 954,\r\n  },\r\n  {\r\n    name: new Date(now+4*hour),\r\n    value: 954,\r\n  },\r\n  {\r\n    name: new Date(now+5*hour),\r\n    value: 954,\r\n  },\r\n  {\r\n    name: new Date(now+6*hour),\r\n    value: 954,\r\n  },\r\n  {\r\n    name: new Date(now+7*hour),\r\n    value: 954,\r\n  },\r\n  {\r\n    name: new Date(now+8*hour),\r\n    value: 954,\r\n  },\r\n  {\r\n    name: new Date(now+9*hour),\r\n    value: 954,\r\n  },\r\n  {\r\n    name: new Date(now+10*hour),\r\n    value: 954,\r\n  },\r\n  {\r\n    name: new Date(now+11*hour),\r\n    value: 954,\r\n  },\r\n  {\r\n    name: new Date(now+12*hour),\r\n    value: 954,\r\n  },\r\n];\r\n\r\nfunction ChartMemory() {\r\n  return (\r\n    <div className=\"ChartContainer\">\r\n      <h4 className=\"title\">Memory</h4>\r\n      <div className=\"Chart\">\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <LineChart data={data}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis\r\n              dataKey=\"name\"\r\n              label={{ value: \"time\", position: \"insideBottomRight\", dy: 10 }}\r\n              tickFormatter={(unixTime) => moment(unixTime).format('HH:mm')}\r\n            />\r\n            <YAxis domain={[0, 2000]} label={{ value: \"MB\", position: \"insideTop\",dy: 10 }}></YAxis>\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"value\" stroke=\"black\" />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartMemory;\r\n","import \"./Chart.css\";\r\nimport moment from \"moment\"\r\nimport {\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Legend,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n} from \"recharts\";\r\n\r\n// Sample chart data\r\nconst now = new Date().getTime();\r\nvar date = new Date(now);\r\nvar hour=3600000\r\nconst data = [\r\n  {\r\n    name: date,\r\n    value: 270,\r\n  },\r\n  {\r\n    name: new Date(now+hour),\r\n    value: 270,\r\n  },\r\n  {\r\n    name: new Date(now+2*hour),\r\n    value: 270,\r\n  },\r\n  {\r\n    name: new Date(now+3*hour),\r\n    value: 270,\r\n  },\r\n  {\r\n    name: new Date(now+4*hour),\r\n    value: 270,\r\n  },\r\n  {\r\n    name: new Date(now+5*hour),\r\n    value: 270,\r\n  },\r\n  {\r\n    name: new Date(now+6*hour),\r\n    value: 270,\r\n  },\r\n  {\r\n    name: new Date(now+7*hour),\r\n    value: 270,\r\n  },\r\n  {\r\n    name: new Date(now+8*hour),\r\n    value: 270,\r\n  },\r\n  {\r\n    name: new Date(now+9*hour),\r\n    value: 270,\r\n  },\r\n  {\r\n    name: new Date(now+10*hour),\r\n    value: 270,\r\n  },\r\n  {\r\n    name: new Date(now+11*hour),\r\n    value: 270,\r\n  },\r\n  {\r\n    name: new Date(now+12*hour),\r\n    value: 270,\r\n  },\r\n];\r\n\r\nfunction ChartNetworkSent() {\r\n  return (\r\n    <div className=\"ChartContainer\">\r\n      <h4 className=\"title\">Network Sent</h4>\r\n      <div className=\"Chart\">\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <LineChart data={data}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis\r\n              dataKey=\"name\"\r\n              label={{ value: \"time\", position: \"insideBottomRight\", dy: 10 }}\r\n              tickFormatter={(unixTime) => moment(unixTime).format('HH:mm')}\r\n            />\r\n            <YAxis domain={[0, 600]} label={{ value: \"GB\", position: \"insideTop\",dy: 10 }}></YAxis>\r\n            <Legend />\r\n            \r\n            <Line type=\"monotone\" dataKey=\"value\" stroke=\"black\" />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartNetworkSent\r\n","import \"./Chart.css\";\r\nimport moment from \"moment\"\r\nimport {\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Legend,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n} from \"recharts\";\r\n\r\n// Sample chart data\r\nconst now = new Date().getTime();\r\nvar date = new Date(now);\r\nvar hour=3600000\r\nconst data = [\r\n  {\r\n    name: date,\r\n    value: 400,\r\n  },\r\n  {\r\n    name: new Date(now+hour),\r\n    value: 400,\r\n  },\r\n  {\r\n    name: new Date(now+2*hour),\r\n    value: 400,\r\n  },\r\n  {\r\n    name: new Date(now+3*hour),\r\n    value: 400,\r\n  },\r\n  {\r\n    name: new Date(now+4*hour),\r\n    value: 400,\r\n  },\r\n  {\r\n    name: new Date(now+5*hour),\r\n    value: 400,\r\n  },\r\n  {\r\n    name: new Date(now+6*hour),\r\n    value: 400,\r\n  },\r\n  {\r\n    name: new Date(now+7*hour),\r\n    value: 400,\r\n  },\r\n  {\r\n    name: new Date(now+8*hour),\r\n    value: 400,\r\n  },\r\n  {\r\n    name: new Date(now+9*hour),\r\n    value: 400,\r\n  },\r\n  {\r\n    name: new Date(now+10*hour),\r\n    value: 400,\r\n  },\r\n  {\r\n    name: new Date(now+11*hour),\r\n    value: 400,\r\n  },\r\n  {\r\n    name: new Date(now+12*hour),\r\n    value: 400,\r\n  },\r\n];\r\n\r\nfunction ChartNetworkRecieve() {\r\n  return (\r\n    <div className=\"ChartContainer\">\r\n      <h4 className=\"title\">Network Recieve</h4>\r\n      <div className=\"Chart\">\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <LineChart data={data}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis\r\n              dataKey=\"name\"\r\n              label={{ value: \"time\", position: \"insideBottomRight\", dy: 10 }}\r\n              tickFormatter={(unixTime) => moment(unixTime).format('HH:mm')}\r\n            />\r\n            <YAxis domain={[0, 600]} label={{ value: \"GB\", position: \"insideTop\",dy: 10 }}></YAxis>\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"value\" stroke=\"black\" />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartNetworkRecieve\r\n","import \"./Chart.css\";\r\nimport moment from \"moment\"\r\nimport {\r\n  LineChart,\r\n  ResponsiveContainer,\r\n  Legend,\r\n\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n} from \"recharts\";\r\n\r\n// Sample chart data\r\nconst now = new Date().getTime();\r\nvar date = new Date(now);\r\nvar hour=3600000\r\nconst data = [\r\n  {\r\n    name: date,\r\n    value: 3 ,\r\n  },\r\n  {\r\n    name: new Date(now+hour),\r\n    value: 3,\r\n  },\r\n  {\r\n    name: new Date(now+2*hour),\r\n    value: 3,\r\n  },\r\n  {\r\n    name: new Date(now+3*hour),\r\n    value: 3,\r\n  },\r\n  {\r\n    name: new Date(now+4*hour),\r\n    value: 3,\r\n  },\r\n  {\r\n    name: new Date(now+5*hour),\r\n    value: 3,\r\n  },\r\n  {\r\n    name: new Date(now+6*hour),\r\n    value: 3,\r\n  },\r\n  {\r\n    name: new Date(now+7*hour),\r\n    value: 3,\r\n  },\r\n  {\r\n    name: new Date(now+8*hour),\r\n    value: 3,\r\n  },\r\n  {\r\n    name: new Date(now+9*hour),\r\n    value: 3,\r\n  },\r\n  {\r\n    name: new Date(now+10*hour),\r\n    value: 2.8,\r\n  },\r\n  {\r\n    name: new Date(now+11*hour),\r\n    value: 2.8,\r\n  },\r\n  {\r\n    name: new Date(now+12*hour),\r\n    value: 2.8,\r\n  },\r\n];\r\n\r\nfunction ChartDiskUsage() {\r\n  return (\r\n    <div className=\"ChartContainer\">\r\n      <h4 className=\"title\">Disk Usage</h4>\r\n      <div className=\"Chart\">\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <LineChart data={data}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis\r\n              dataKey=\"name\"\r\n              label={{ value: \"time\", position: \"insideBottomRight\", dy: 10 }}\r\n              tickFormatter={(unixTime) => moment(unixTime).format('HH:mm')}\r\n            />\r\n            <YAxis domain={[0, 4]} label={{ value: \"GB\", position: \"insideTop\",dy: 10 }}></YAxis>\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"value\" stroke=\"black\" />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartDiskUsage\r\n","import React from \"react\";\r\nimport \"./AppMonitoring.css\";\r\nimport Map from \"./Map/Map\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport { useState, useCallback, useRef } from \"react\";\r\nimport AppMonitoringList from \"./AppMonitoringList/AppMonitoringList\";\r\n\r\nimport ChartCPU from \"./Chart/ChartCPU\";\r\nimport ChartMemory from \"./Chart/ChartMemory\";\r\n\r\nimport ChartNetwork from \"./Chart/ChartNetworkSent\";\r\nimport ChartNetworkRecieve from \"./Chart/ChartNetworkRecieve\";\r\nimport ChartDiskUsage from \"./Chart/ChartDiskUsage\";\r\n\r\nvar AllAppInstances = [\r\n  {\r\n    _id: 1,\r\n    zone: \"Berlin\",\r\n    organization: \"DAI-Labor\",\r\n    networkflavour:\"S\",\r\n    cloudflavour:\"M\",\r\n    network: {\r\n      _id: 1,\r\n      provider: \"Telekom\",\r\n      position: { lat: 52.54449352240251, lng: 13.404101228027363 },\r\n      radius: 4,\r\n    },\r\n    \r\n    cloud: {\r\n      _id: 1,\r\n      provider: \"Amazon\",\r\n      position: { lat: 52.51265020817675, lng: 13.385330469182657 },\r\n      radius: 10,\r\n    },\r\n    name: \"Fall Detection\",\r\n    deploymentType: \"Docker\",\r\n    version: 2,\r\n    status: \"running\",\r\n  },\r\n  {\r\n    _id: 2,\r\n    zone: \"Berlin\",\r\n    organization: \"DAI-Labor\",\r\n    networkflavour:\"M\",\r\n    cloudflavour:\"M\",\r\n    network: {\r\n      _id: 1,\r\n      provider: \"Private 5G\",\r\n      position: { lat: 52.50967969606449, lng: 13.2472143187743 },\r\n      radius: 4,\r\n    },\r\n    cloud: {\r\n      _id: 1,\r\n      provider: \"Private Edge\",\r\n      position: { lat: 52.50443284905346, lng: 13.296309472582895 },\r\n      radius: 10,\r\n    },\r\n    name: \"E-Health\",\r\n    deploymentType: \"Kubernetes\",\r\n    version: 2,\r\n    status: \"scheduled\",\r\n  },\r\n  {\r\n    _id: 3,\r\n    zone: \"Berlin\",\r\n    organization: \"DAI-Labor\",\r\n    networkflavour:\"S\",\r\n    cloudflavour:\"S\",\r\n    network: {\r\n      _id: 1,\r\n      provider: \"Private 5G\",\r\n      position: { lat: 52.500126065177, lng: 13.35577855041505 },\r\n      radius: 2,\r\n    },\r\n    cloud: {\r\n      _id: 1,\r\n      provider: \"Private Edge\",\r\n      position: { lat: 52.500126065177334, lng: 13.355778550415058 },\r\n      radius: 10,\r\n    },\r\n    name: \"Health-Check\",\r\n    deploymentType: \"Kubernetes\",\r\n    version: 2,\r\n    status: \"scheduled\",\r\n  },\r\n];\r\nexport default function AppMonitoring() {\r\n  const mapRef = useRef();\r\n  const onMapLoad = useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n  const [selectedAppInstance, setSelectedAppInstance] = useState(null);\r\n\r\n  return (\r\n    <div className=\"AppMonitoring\">\r\n      <h2>\r\n        App Monitoring\r\n        <RefreshIcon type=\"button\" className=\"refreshButton\" />\r\n      </h2>\r\n      <div className=\"MapContainer\">\r\n        <Map\r\n          AppInstanceList={AllAppInstances}\r\n          onMapLoad={onMapLoad}\r\n          setSelectedAppInstance={(appInstance) => {\r\n            setSelectedAppInstance(appInstance);\r\n          }}\r\n          selectedAppInstance={selectedAppInstance}\r\n        />\r\n      \r\n        <div className=\"charts\">\r\n          <ChartCPU />\r\n          <ChartMemory/>\r\n          <ChartDiskUsage />\r\n          \r\n        </div>\r\n        <div className=\"charts\">\r\n          <ChartNetwork />\r\n          <ChartNetworkRecieve />\r\n        </div>\r\n      </div>\r\n      <div className=\"table-App-Instances\">\r\n        <AppMonitoringList\r\n          AllAppInstances={AllAppInstances}\r\n          setSelectedAppInstance={(elem) => setSelectedAppInstance(elem)}\r\n          selectedAppInstance={selectedAppInstance}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport AppInstances from \"./AppInstances/AppInstances\";\r\nimport DevApps from \"./DevApps/DevApps\";\r\nimport CloudFlavour from \"./CloudFlavour/CloudFlavour\";\r\nimport \"./APMainBody.css\"\r\nimport NetworkFlavour from \"./NetworkFlavour/NetworkFlavour\";\r\nimport AppMonitoring from \"./AppMonitoring/AppMonitoring\";\r\nfunction APMainBody(props) {\r\n  return (\r\n    <div className=\"APMainBody\">\r\n      {props.menu === \"CloudFlavour\" && <CloudFlavour user={props.user} />}\r\n      {props.menu === \"NetworkFlavour\" && <NetworkFlavour user={props.user} />}\r\n      {props.menu === \"DevApps\" && <DevApps user={props.user} />}\r\n      {props.menu === \"AppInstances\" && <AppInstances user={props.user} />}\r\n      {props.menu === \"AppMonitoring\" && <AppMonitoring user={props.user} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default APMainBody;\r\n","import React, { useState } from \"react\";\r\nimport MainHeader from \"../MainHeader/MainHeader\";\r\nimport MainFooter from \"../MainFooter/MainFooter\";\r\nimport APLeftSideMenu from \"../LeftsideMenu/APLeftSideMenu\";\r\n\r\nimport APMainBody from \"./APMainBody/APMainBody\";\r\nfunction GUIAppProvider(props) {\r\n  const [menu, setMenu] = useState(\"CloudFlavour\");\r\n  return (\r\n    <>\r\n      <MainHeader\r\n        setLogin={() => props.setLogin(false)}\r\n        user={props.user}\r\n        userRole={props.userRole}\r\n      />\r\n      <APLeftSideMenu setMenu={e=>setMenu(e)} menu={menu}></APLeftSideMenu>\r\n      <APMainBody menu={menu} user={props.user}/>\r\n      <MainFooter />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GUIAppProvider;\r\n","import React from \"react\";\r\nimport \"./Information.css\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SettingsTwoToneIcon from \"@material-ui/icons/SettingsTwoTone\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { serverurl } from \"../../../../../logik/logik\";\r\nconst Information = (props) => {\r\n  const deleteInfra = (id) => {\r\n    fetch(`${serverurl}/Infrastructure?id=${id}`, {\r\n      method: \"DELETE\",\r\n    }).then(props.setSelectedInfra(null));\r\n  };\r\n\r\n  const sendInfoToServer = async () => {\r\n    const importData = getEditedData();\r\n    try {\r\n      fetch(`${serverurl}/Infrastructure?id=${props.selectedInfra._id}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(importData),\r\n      }).then(() => {\r\n        props.setEdit(false);\r\n        props.setSelectedInfra(null);\r\n      });\r\n    } catch (error) {\r\n      console.log(props.selectedInfra);\r\n    }\r\n  };\r\n  const getEditedData = () => {\r\n    var data;\r\n    var radius = document.getElementById(\"edit_radius\").value;\r\n    if (props.selectedInfra.type === \"Network\") {\r\n      var delay = document.getElementById(\"edit_delay\").value;\r\n      var uplink = document.getElementById(\"edit_uplink\").value;\r\n      var downlink = document.getElementById(\"edit_downlink\").value;\r\n      data = {\r\n        radius: radius,\r\n        delay: delay,\r\n        uplink: uplink,\r\n        downlink: downlink,\r\n      };\r\n    }\r\n    if (props.selectedInfra.type === \"Cloud\") {\r\n      var CPU = document.getElementById(\"edit_CPU\").value;\r\n      var RAM = document.getElementById(\"edit_RAM\").value;\r\n      data = {\r\n        radius: radius,\r\n        CPU: CPU,\r\n        RAM: RAM,\r\n      };\r\n    }\r\n    return data;\r\n  };\r\n\r\n  return (\r\n    <div className=\"Information\">\r\n      {!props.selectedInfra && <h2>Network/Cloud Details</h2>}\r\n      {!props.selectedInfra && <h5>Select an infrastructure to see detail</h5>}\r\n      {props.selectedInfra && (\r\n        <h2>\r\n          {props.selectedInfra.type} details:\r\n          <SettingsTwoToneIcon\r\n            className=\"button\"\r\n            type=\"button\"\r\n            onClick={() => props.setEdit(!props.edit)}\r\n          />\r\n          <DeleteIcon\r\n            className=\"button\"\r\n            type=\"button\"\r\n            onClick={() => deleteInfra(props.selectedInfra._id)}\r\n          ></DeleteIcon>\r\n        </h2>\r\n      )}\r\n      <div className=\"table-scroll\">\r\n        <table className=\"table table-striped table-hover\">\r\n          <tbody>\r\n            {props.selectedInfra && (\r\n              <>\r\n                <tr>\r\n                  <td className=\"col-6\">Longtitude</td>\r\n                  <td className=\"col-6\">{props.selectedInfra.position.lng}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-6\">Latitude</td>\r\n                  <td className=\"col-6\">{props.selectedInfra.position.lat}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Radius</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"inputfield\"\r\n                        id=\"edit_radius\"\r\n                        defaultValue={props.selectedInfra.radius}\r\n                      />\r\n                      km\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && (\r\n                    <td className=\"col-3\">{props.selectedInfra.radius} km</td>\r\n                  )}\r\n                </tr>\r\n              </>\r\n            )}\r\n            {props.selectedInfra && props.selectedInfra.type === \"Network\" && (\r\n              <>\r\n                <tr>\r\n                  <td className=\"col-8\">Area of Service</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Area of Service: Region Specification\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Area of Service: Region Specification\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Availability</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Data network access</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Data network access: Data access per data network\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Data network access: Tunneling mechanism\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Delay tolerance</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"inputfield\"\r\n                        id=\"edit_delay\"\r\n                        defaultValue={props.selectedInfra.delay}\r\n                      ></input>\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && (\r\n                    <td className=\"col-3\">{props.selectedInfra.delay} </td>\r\n                  )}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Deterministic communication</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Deterministic communication: Availability\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Deterministic communication: Periodicity\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Deterministic communication: Periodicity\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Downlink throughput per UE</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"inputfield\"\r\n                        id=\"edit_downlink\"\r\n                        defaultValue={props.selectedInfra.downlink}\r\n                      ></input>\r\n                      Mbps\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && (\r\n                    <td className=\"col-3\">\r\n                      {props.selectedInfra.downlink} Mbps\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Downlink throughput per UE: Guaranteed downlink throughput\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"inputfield\"\r\n                        defaultValue={props.selectedInfra.downlink}\r\n                      ></input>\r\n                      Mbps\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && (\r\n                    <td className=\"col-3\">\r\n                      {props.selectedInfra.downlink} Mbps\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Downlink throughput per UE: Maximum downlink throughput\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"inputfield\"\r\n                        defaultValue={props.selectedInfra.downlink}\r\n                      ></input>\r\n                      Mbps\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && (\r\n                    <td className=\"col-3\">\r\n                      {props.selectedInfra.downlink} Mbps\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Downlink throughput per network slice\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"inputfield\"\r\n                        defaultValue={props.selectedInfra.downlink}\r\n                      ></input>\r\n                      Mbps\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && (\r\n                    <td className=\"col-3\">\r\n                      {props.selectedInfra.downlink} Mbps\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Downlink throughput per network slice: Guaranteed downlink\r\n                    throughput\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"inputfield\"\r\n                        defaultValue={props.selectedInfra.downlink}\r\n                      ></input>\r\n                      Mbps\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && (\r\n                    <td className=\"col-3\">\r\n                      {props.selectedInfra.downlink} Mbps\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Downlink throughput per network slice: Maximum downlink\r\n                    throughput\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"inputfield\"\r\n                        defaultValue={props.selectedInfra.downlink}\r\n                      ></input>\r\n                      Mbps\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && (\r\n                    <td className=\"col-3\">\r\n                      {props.selectedInfra.downlink} Mbps\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Energy efficiency</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Energy efficiency: Network slice enery efficiency\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Energy efficiency: Time frame of the measurement\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Group communication support</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Isolation level: Isolation</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Isolation level: Logical Isolation</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Isolation level: Physical Isolation</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Location based message delivery</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">MMTel support</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Maximum supported packet size</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Mission critical support: Mission-critical capability\r\n                    support\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Mission critical support: Mission-critical service support\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">NB-IoT support</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Network Slice Customer network functions\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Number of connections</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Number of terminals</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Performance monitoring</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Performance monitoring: Availability\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Performance monitoring: Prediction frequency\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Positioning support</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Positioning support: Accuracy</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Positioning support: Availability</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Positioning support: Prediction frequency\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Radio spectrum</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Root cause investigation</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Session and Service Continuity support\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Simltaneous use of the network slice\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Slice quality of service parameters</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Slice quality of service parameters: Maximum Packet LossRate\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Slice quality of service parameters: Packet Delay Budget\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Slice quality of service parameters: Packet Error Rate\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Slice quality of service parameters: Priority Level\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Slice quality of service parameters: Ressource Type\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Support for non-IP traffic</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Supported device velocity</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Synchronicity</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Synchronicity: Accuracy</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Synchronicity: Availability</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Terminal density</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Uplink throughput per UE</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"inputfield\"\r\n                        id=\"edit_uplink\"\r\n                        defaultValue={props.selectedInfra.uplink}\r\n                      ></input>\r\n                      Mbps\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && (\r\n                    <td className=\"col-3\">{props.selectedInfra.uplink} Mbps</td>\r\n                  )}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Uplink throughput per UE: Guaranteed uplink throughput\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"inputfield\"\r\n                        defaultValue={props.selectedInfra.uplink}\r\n                      ></input>\r\n                      Mbps\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && (\r\n                    <td className=\"col-3\">{props.selectedInfra.uplink} Mbps</td>\r\n                  )}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Uplink throughput per UE: Maximum uplink throughput\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"inputfield\"\r\n                        defaultValue={props.selectedInfra.uplink}\r\n                      ></input>\r\n                      Mbps\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && (\r\n                    <td className=\"col-3\">{props.selectedInfra.uplink} Mbps</td>\r\n                  )}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">Uplink throughput per network slice</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"inputfield\"\r\n                        defaultValue={props.selectedInfra.uplink}\r\n                      ></input>\r\n                      Mbps\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && (\r\n                    <td className=\"col-3\">{props.selectedInfra.uplink} Mbps</td>\r\n                  )}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Uplink throughput per network slice: Guaranteed uplink\r\n                    throughput\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"inputfield\"\r\n                        defaultValue={props.selectedInfra.uplink}\r\n                      ></input>\r\n                      Mbps\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && (\r\n                    <td className=\"col-3\">{props.selectedInfra.uplink} Mbps</td>\r\n                  )}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    Uplink throughput per network slice: Maximum uplink\r\n                    throughput\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"inputfield\"\r\n                        defaultValue={props.selectedInfra.uplink}\r\n                      ></input>\r\n                      Mbps\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && (\r\n                    <td className=\"col-3\">{props.selectedInfra.uplink} Mbps</td>\r\n                  )}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">User data access</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">User data access: Data access</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">\r\n                    User data access: Tunnelling mechanism\r\n                  </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">User management openness</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">V2X communication mode</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input className=\"inputfield\" />\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && <td className=\"col-3\"></td>}\r\n                </tr>\r\n              </>\r\n            )}\r\n            {props.selectedInfra && props.selectedInfra.type === \"Cloud\" && (\r\n              <>\r\n                <tr>\r\n                  <td className=\"col-8\">CPU:</td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"inputfield\"\r\n                        id=\"edit_CPU\"\r\n                        defaultValue={props.selectedInfra.CPU}\r\n                      ></input>\r\n                      x Core\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && (\r\n                    <td className=\"col-3\">{props.selectedInfra.CPU}x Core</td>\r\n                  )}\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"col-8\">RAM: </td>\r\n                  {props.edit && (\r\n                    <td className=\"col-3\">\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"inputfield\"\r\n                        id=\"edit_RAM\"\r\n                        defaultValue={props.selectedInfra.RAM}\r\n                      ></input>\r\n                      Gb\r\n                    </td>\r\n                  )}\r\n                  {!props.edit && (\r\n                    <td className=\"col-3\">{props.selectedInfra.RAM} Gb</td>\r\n                  )}\r\n                </tr>\r\n              </>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n        {props.edit && (\r\n          <>\r\n            <Button\r\n              variant=\"primary \"\r\n              className=\"buttonright\"\r\n              onClick={sendInfoToServer}\r\n            >\r\n              Update\r\n            </Button>\r\n            <Button\r\n              variant=\"secondary \"\r\n              className=\"buttonright\"\r\n              onClick={() => props.setEdit(false)}\r\n            >\r\n              Close\r\n            </Button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Information;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport \"./List.css\";\r\n\r\nconst useSortableData = (items, config = null) => {\r\n  const [sortConfig, setSortConfig] = useState(config);\r\n  const sortedItems = useMemo(() => {\r\n    let sortableItems = [...items];\r\n    if (sortConfig !== null) {\r\n      sortableItems.sort((a, b) => {\r\n        if (a[sortConfig.key] < b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\r\n        }\r\n        if (a[sortConfig.key] > b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\r\n        }\r\n\r\n        return 0;\r\n      });\r\n    }\r\n    return sortableItems;\r\n  }, [items, sortConfig]);\r\n\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (\r\n      sortConfig &&\r\n      sortConfig.key === key &&\r\n      sortConfig.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\";\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  return { items: sortedItems, requestSort, sortConfig };\r\n};\r\n\r\nconst List = (props) => {\r\n  const { items, requestSort, sortConfig } = useSortableData(\r\n    props.filteredInfrasList\r\n  );\r\n  const [filteredString, setFilteredString] = useState(\"\");\r\n  const [filteredItems, setFilteredItems] = useState(items);\r\n  const getClassNamesFor = (name) => {\r\n    if (!sortConfig) {\r\n      return;\r\n    }\r\n    return sortConfig.key === name ? sortConfig.direction : undefined;\r\n  };\r\n  useEffect(() => {\r\n    if (filteredString === \"\") {\r\n      setFilteredItems(items);\r\n    } else {\r\n      setFilteredItems(\r\n        items.filter((item) =>\r\n          Object.keys(item).some(\r\n            (elem) =>\r\n              elem !== \"_id\" &&\r\n              (String(item[elem]).includes(filteredString) ||\r\n                String(item[elem].provider).includes(filteredString))\r\n          )\r\n        )\r\n      );\r\n    }\r\n  }, [filteredString, items]);\r\n\r\n  return (\r\n    <div className=\"List\">\r\n      <div className=\"filter\">\r\n        <input\r\n          className=\"inputfilter\"\r\n          value={filteredString}\r\n          onChange={(e) => {\r\n            setFilteredString(e.target.value);\r\n          }}\r\n          placeholder=\"Filter\"\r\n        />\r\n      </div>\r\n      <table className=\"table table-striped table-hover\">\r\n        <thead>\r\n          <tr className=\"row g-0\">\r\n            <th className=\"col\">\r\n              <div\r\n                onClick={() => requestSort(\"type\")}\r\n                className={getClassNamesFor(\"type\")}\r\n              >\r\n                Type\r\n              </div>\r\n            </th>\r\n            <th className=\"col\">\r\n              <div\r\n                onClick={() => requestSort(\"provider\")}\r\n                className={getClassNamesFor(\"provider\")}\r\n              >\r\n                Provider\r\n              </div>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody className=\"body\">\r\n          {filteredItems.map((item) => (\r\n            <tr\r\n              className={`\"row g-0\" ${\r\n                props.selectedInfra && props.selectedInfra._id === item._id\r\n                  ? \"active\"\r\n                  : \"\"\r\n              }`}\r\n              key={item._id}\r\n              onClick={() => {\r\n                props.setSelectedInfra(item);\r\n                props.setEdit(false);\r\n              }}\r\n            >\r\n              <td className=\"col\">{item.type}</td>\r\n              <td className=\"col\">{item.provider}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import usePlacesAutocomplete, {\r\n  getGeocode,\r\n  getLatLng,\r\n} from \"use-places-autocomplete\";\r\nimport \"./Search.css\"\r\nimport {\r\n  Combobox,\r\n  ComboboxInput,\r\n  ComboboxPopover,\r\n  ComboboxList,\r\n  ComboboxOption,\r\n} from \"@reach/combobox\";\r\nimport \"@reach/combobox/styles.css\";\r\nimport { serverurl } from \"../../../../../logik/logik\";\r\nconst Search = (props) => {\r\n  const {\r\n    ready,\r\n    value,\r\n    suggestions: { status, data },\r\n    setValue,\r\n    clearSuggestions,\r\n  } = usePlacesAutocomplete({\r\n    requestOptions: {\r\n      location: { lat: () => 52.51651, lng: () => 13.33578 },\r\n      radius: 200 * 1000,\r\n    },\r\n  });\r\n\r\n  const chooseLocation = async (address) => {\r\n    setValue(address, false);\r\n    clearSuggestions();\r\n    try {\r\n      const result = await getGeocode({ address });\r\n      const { lat, lng } = await getLatLng(result[0]);\r\n      props.panTo({ lat, lng });\r\n      props.setCenter({ lat: lat, lng: lng });\r\n      /*send request to server to get all Infra near the location*/\r\n      fetch(`${serverurl}/Infrastructure?lat=${lat}&lng=${lng}`)\r\n        .then((response) => response.json())\r\n        .then((data) => props.setInfrasList(data));\r\n    } catch (error) {\r\n      console.log(\"error!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <Combobox onSelect={chooseLocation}>\r\n        <ComboboxInput\r\n          value={value}\r\n          onChange={(e) => {\r\n            setValue(e.target.value);\r\n          }}\r\n          disabled={!ready}\r\n          placeholder=\"Enter an address\"\r\n        />\r\n        <ComboboxPopover>\r\n          <ComboboxList>\r\n            {status === \"OK\" &&\r\n              data.map((place) => (\r\n                <ComboboxOption key={place.place_id} value={place.description} />\r\n              ))}\r\n          </ComboboxList>\r\n        </ComboboxPopover>\r\n      </Combobox>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState } from \"react\";\r\nimport { GoogleMap, Marker, Circle, InfoWindow } from \"@react-google-maps/api\";\r\nimport \"./Map.css\";\r\nimport MapStyle from \"./MapStyle\";\r\nconst mapContainerStyle = {\r\n  width: \"100%\",\r\n  height: \"85vh\",\r\n  float: \"right\",\r\n};\r\nconst center = {\r\n  lat: 52.51651,\r\n  lng: 13.33578,\r\n};\r\n\r\nconst options = {\r\n  styles: MapStyle,\r\n}\r\n\r\nconst Map = (props) => {\r\n  const [showCircle,setShowCircle]=useState(true);\r\n  return (\r\n    <div className=\"GoogleMap\">\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={13}\r\n        center={center}\r\n        options={options}\r\n        onLoad={props.onMapLoad}\r\n        onClick={props.onMapClick}\r\n      >\r\n        <Marker position={props.searchedLocation} />\r\n        {props.filteredInfrasList.map((infra) => (\r\n          <div key={infra._id}>\r\n            <Marker\r\n              position={infra.position}\r\n              icon={\r\n                (infra.type === \"Network\" && {\r\n                  url: \"/Atenne.png\",\r\n                  scaledSize: new window.google.maps.Size(30, 30),\r\n                  origin: new window.google.maps.Point(0, 0),\r\n                  anchor: new window.google.maps.Point(15, 15),\r\n                }) ||\r\n                (infra.type === \"Cloud\" && {\r\n                  url: \"/Cloud.png\",\r\n                  scaledSize: new window.google.maps.Size(30, 30),\r\n                  origin: new window.google.maps.Point(0, 0),\r\n                  anchor: new window.google.maps.Point(15, 15),\r\n                })\r\n              }\r\n              onClick={() => {\r\n                props.setSelectedInfra(infra);\r\n                props.setEdit(false);\r\n              }}\r\n            />\r\n\r\n            {showCircle && <Circle\r\n              center={infra.position}\r\n              radius={infra.radius * 1000}\r\n              options={\r\n                infra.type === \"Cloud\" && {\r\n                  strokeColor: \"#68b9f2\",\r\n                  fillColor: \"#2a5777\",\r\n                }\r\n              }\r\n            />}\r\n          </div>\r\n        ))}\r\n        {props.selectedInfra ? (\r\n          <InfoWindow\r\n            position={props.selectedInfra.position}\r\n            onCloseClick={() => {\r\n              props.setSelectedInfra(null);\r\n              props.setEdit(false);\r\n            }}\r\n          >\r\n            <div>\r\n              <h2 className=\"Intra_Title\">{props.selectedInfra.provider}</h2>\r\n              <p>{props.selectedInfra.type}</p>\r\n            </div>\r\n          </InfoWindow>\r\n        ) : null}\r\n        <button className=\"button\" onClick={()=>setShowCircle(!showCircle)}>Coverage</button>\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n};\r\nexport default Map;\r\n","\r\n\r\nconst MapStyle= [\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#444444\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f2f2f2\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": -100\r\n            },\r\n            {\r\n                \"lightness\": 45\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"simplified\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#c0e4f3\"\r\n            },\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n\r\nexport default MapStyle;","import React from \"react\";\r\nimport AddCircleOutlineTwoToneIcon from '@material-ui/icons/AddCircleOutlineTwoTone';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport \"./AddInfrastructure.css\";\r\nimport { serverurl } from \"../../../../../logik/logik\";\r\nconst AddInfrastructure = (props) => {\r\n  const [type, setType] = React.useState(\"Network\");\r\n  const resetLatLng = () => {\r\n    props.setSelectedLat();\r\n    props.setSelectedLng();\r\n    props.handleShow();\r\n  };\r\n  const sendInfoToServer = async () => {\r\n    const importData = getAllData();\r\n    try {\r\n      fetch(`${serverurl}/infrastructure`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(importData),\r\n      }).then(() => {\r\n        props.handleClose();\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getAllData = () => {\r\n    var lat = document.getElementById(\"lat\").value;\r\n    var lng = document.getElementById(\"lng\").value;\r\n    var radius = document.getElementById(\"radius\").value;\r\n    var data;\r\n    if (type === \"Network\") {\r\n      var delay = document.getElementById(\"delay\").value;\r\n      var uplink = document.getElementById(\"uplink\").value;\r\n      var downlink = document.getElementById(\"downlink\").value;\r\n      data = {\r\n        type: type,\r\n        position: {\r\n          lat: lat,\r\n          lng: lng,\r\n        },\r\n        provider: props.user,\r\n        radius: radius,\r\n        delay: delay,\r\n        uplink: uplink,\r\n        downlink: downlink,\r\n      };\r\n    }\r\n    if (type === \"Cloud\") {\r\n      var CPU = document.getElementById(\"CPU\").value;\r\n      var RAM = document.getElementById(\"RAM\").value;\r\n      data = {\r\n        type: type,\r\n        position: {\r\n          lat: lat,\r\n          lng: lng,\r\n        },\r\n        provider: props.user,\r\n        radius: radius,\r\n        CPU: CPU,\r\n        RAM: RAM,\r\n      };\r\n    }\r\n\r\n    return data;\r\n  };\r\n\r\n  return (\r\n    <div className=\"AddInfra\">\r\n      <AddCircleOutlineTwoToneIcon type=\"button\" className=\"AddButton\" onClick={resetLatLng}/>\r\n        \r\n\r\n      <Modal show={props.show} onHide={props.handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Infrastructure's information</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <table className=\"table\">\r\n            <tbody>\r\n              <tr>\r\n                <td>Provider</td>\r\n                <td>{props.user}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Type</td>\r\n                <td>\r\n                  <select\r\n                    id=\"type\"\r\n                    value={type}\r\n                    onChange={(event) => setType(event.target.value)}\r\n                  >\r\n                    <option value=\"Network\">Network</option>\r\n                    <option value=\"Cloud\">Cloud</option>\r\n                  </select>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Latitude</td>\r\n                <td>\r\n                  <input\r\n                    id=\"lat\"\r\n                    type=\"number\"\r\n                    defaultValue={props.selectedLat}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Longtitude</td>\r\n                <td>\r\n                  <input\r\n                    id=\"lng\"\r\n                    type=\"number\"\r\n                    defaultValue={props.selectedLng}\r\n                  />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Radius</td>\r\n                <td>\r\n                  <input id=\"radius\" type=\"number\" min=\"1\" />\r\n                </td>\r\n              </tr>\r\n\r\n              {type === \"Network\" && (\r\n                <>\r\n                  <tr>\r\n                    <td>Delay tolerance</td>\r\n                    <td>\r\n                      <input id=\"delay\" type=\"number\" />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Downlink</td>\r\n                    <td>\r\n                      <input id=\"downlink\" type=\"number\" min=\"1\" />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Uplink</td>\r\n                    <td>\r\n                      <input id=\"uplink\" type=\"number\" min=\"1\" />\r\n                    </td>\r\n                  </tr>\r\n                </>\r\n              )}\r\n              {type === \"Cloud\" && (\r\n                <>\r\n                  <tr>\r\n                    <td>CPU</td>\r\n                    <td>\r\n                      <input id=\"CPU\" type=\"number\" min=\"1\" />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>RAM</td>\r\n                    <td>\r\n                      <input id=\"RAM\" type=\"number\" min=\"1\" />\r\n                    </td>\r\n                  </tr>\r\n                </>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={props.handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={sendInfoToServer}>\r\n            Add Infrastructure\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddInfrastructure;\r\n","import React from \"react\";\r\nimport { useState, useCallback, useRef, useEffect } from \"react\";\r\nimport Information from \"./Information/Information\";\r\nimport List from \"./List/List\";\r\nimport Search from \"./Map/Search\";\r\nimport Map from \"./Map/Map\";\r\nimport AddInfrastructure from \"./AddInfrastructure/AddInfrastructure\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nimport \"./MarketMaps.css\";\r\nimport { serverurl } from \"../../../../logik/logik\";\r\n\r\nfunction MarketMaps(props) {\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  const [showModalAddInra, setShowModalAddInfra] = useState(false);\r\n  const modalAddInfraClose = () => setShowModalAddInfra(false);\r\n  const modalAddInfraShow = () => setShowModalAddInfra(true);\r\n\r\n  const [selectedLat, setSelectedLat] = useState();\r\n  const [selectedLng, setSelectedLng] = useState();\r\n  const changeLat = (lat) => setSelectedLat(lat);\r\n  const changeLng = (lng) => setSelectedLng(lng);\r\n\r\n  const mapRef = useRef();\r\n  const onMapLoad = useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n  const onMapClick = useCallback((event) => {\r\n    changeLat(event.latLng.lat());\r\n    changeLng(event.latLng.lng());\r\n\r\n    modalAddInfraShow();\r\n  }, []);\r\n  const panTo = ({ lat, lng }) => {\r\n    mapRef.current.panTo({ lat, lng });\r\n  };\r\n  const [selectedInfra, setSelectedInfra] = useState(null);\r\n  const [searchedLocation, setSearchedLocation] = useState(null);\r\n  const [infrasList, setInfrasList] = useState([]);\r\n  const [filteredInfrasList, setFilteredInfrasList] = useState([]);\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setSocket(io(`${serverurl}`));\r\n    try {\r\n      fetch(`${serverurl}/Infrastructure?organization=${props.user}`)\r\n        .then((response) => response.json())\r\n        .then((data) => setInfrasList(data));\r\n    } catch (error) {\r\n      console.log(\"error!\");\r\n    }\r\n  }, [props.user]);\r\n\r\n  useEffect(() => {\r\n    if (!socket) {\r\n      return;\r\n    }\r\n    socket.on(\"connect\", () => {\r\n      console.log(\"socket id:\", socket.id);\r\n    });\r\n    socket.on(\"disconnect\", () => {\r\n      console.log(\"fail\");\r\n    });\r\n    socket.on(\"recieve_data\", (updatedInfraList) => {\r\n      setInfrasList(updatedInfraList);\r\n    });\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    var filteredInfra = infrasList.filter(\r\n      (Infra) => Infra.provider === props.user\r\n    );\r\n\r\n    setFilteredInfrasList(filteredInfra);\r\n  }, [infrasList, props.user]);\r\n\r\n  return (\r\n    <div className=\"Marketmaps\">\r\n      <div className=\"leftContainer\">\r\n        <h2>\r\n          Infrastructures\r\n          <AddInfrastructure\r\n            handleClose={modalAddInfraClose}\r\n            handleShow={modalAddInfraShow}\r\n            show={showModalAddInra}\r\n            selectedLat={selectedLat}\r\n            selectedLng={selectedLng}\r\n            setSelectedLat={changeLat}\r\n            setSelectedLng={changeLng}\r\n            user={props.user}\r\n          />\r\n        </h2>\r\n\r\n        <List\r\n          filteredInfrasList={filteredInfrasList}\r\n          setSelectedInfra={(infra) => {\r\n            setSelectedInfra(infra);\r\n          }}\r\n          selectedInfra={selectedInfra}\r\n          setEdit={(infra) => {\r\n            setEdit(infra);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"middleContainer\">\r\n        <Information\r\n          selectedInfra={selectedInfra}\r\n          setSelectedInfra={(infra) => {\r\n            setSelectedInfra(infra);\r\n          }}\r\n          edit={edit}\r\n          setEdit={(infra) => {\r\n            setEdit(infra);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"rightContainer\">\r\n        <Search\r\n          panTo={panTo}\r\n          setCenter={(location) => setSearchedLocation(location)}\r\n          setInfrasList={(InfrasList) => setInfrasList(InfrasList)}\r\n        />\r\n        <Map\r\n          filteredInfrasList={filteredInfrasList}\r\n          onMapClick={onMapClick}\r\n          onMapLoad={onMapLoad}\r\n          searchedLocation={searchedLocation}\r\n          setSelectedInfra={(infra) => {\r\n            setSelectedInfra(infra);\r\n          }}\r\n          selectedInfra={selectedInfra}\r\n          setEdit={(infra) => {\r\n            setEdit(infra);\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MarketMaps;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport \"./IPMonitoringList.css\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SettingsTwoToneIcon from \"@material-ui/icons/SettingsTwoTone\";\nconst useSortableData = (items, config = null) => {\n  const [sortConfig, setSortConfig] = useState(config);\n  const sortedItems = useMemo(() => {\n    let sortableItems = [...items];\n    if (sortConfig !== null) {\n      sortableItems.sort((a, b) => {\n        \n        if (typeof(a[sortConfig.key]) ===\"object\"&&a[sortConfig.key].provider < b[sortConfig.key].provider) {\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\n        }\n        if (typeof(a[sortConfig.key]) ===\"object\" && a[sortConfig.key].provider > b[sortConfig.key].provider) {\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\n        }\n        if (a[sortConfig.key] < b[sortConfig.key]) {\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\n        }\n        if (a[sortConfig.key] > b[sortConfig.key]) {\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\n        }\n       \n\n        return 0;\n      });\n    }\n    return sortableItems;\n  }, [items, sortConfig]);\n\n  const requestSort = (key) => {\n    let direction = \"ascending\";\n    if (\n      sortConfig &&\n      sortConfig.key === key &&\n      sortConfig.direction === \"ascending\"\n    ) {\n      direction = \"descending\";\n    }\n    setSortConfig({ key, direction });\n  };\n\n  return { items: sortedItems, requestSort, sortConfig };\n};\n\nconst IPMonitoringList = (props) => {\n  const { items, requestSort, sortConfig } = useSortableData(\n    props.AllInfraInstances\n  );\n  const [filteredString, setFilteredString] = useState(\"\");\n  const [filteredItems, setFilteredItems] = useState(items);\n  const getClassNamesFor = (name) => {\n    if (!sortConfig) {\n      return;\n    }\n    return sortConfig.key === name ? sortConfig.direction : undefined;\n  };\n  useEffect(() => {\n    if (filteredString === \"\") {\n      setFilteredItems(items);\n    } else {\n      setFilteredItems(\n        items.filter((item) =>\n          Object.keys(item).some(\n            (elem) =>\n              elem !== \"_id\" && (String(item[elem]).includes(filteredString) || String(item[elem].provider).includes(filteredString) )\n          )\n        )\n      );\n    }\n  }, [filteredString, items]);\n\n  return (\n    <div className=\"IPMonitoringList\">\n      <div className=\"filter\">\n        <input\n          className=\"inputfilter\"\n          value={filteredString}\n          onChange={(e) => {\n            setFilteredString(e.target.value);\n          }}\n          placeholder=\"Filter\"\n        />\n      </div>\n      <table className=\"table table-striped table-hover\">\n        <thead>\n          <tr className=\"row g-0\">\n            <th className=\"col\">\n              <div\n                onClick={() => requestSort(\"_id\")}\n                className={getClassNamesFor(\"_id\")}\n              >\n                _id\n              </div>\n            </th>\n            <th className=\"col\">\n              <div\n                onClick={() => requestSort(\"provider\")}\n                className={getClassNamesFor(\"provider\")}\n              >\n                Provider\n              </div>\n            </th>\n            <th className=\"col\">\n              <div\n                onClick={() => requestSort(\"delayTolerance\")}\n                className={getClassNamesFor(\"delayTolerance\")}\n              >\n                Delay Tolerance\n              </div>\n            </th>\n            <th className=\"col\">\n              <div\n                onClick={() => requestSort(\"Downlink\")}\n                className={getClassNamesFor(\"Downlink\")}\n              >\n                Downlink\n              </div>\n            </th>\n            <th className=\"col\">\n              <div\n                onClick={() => requestSort(\"Uplink\")}\n                className={getClassNamesFor(\"Uplink\")}\n              >\n                Uplink\n              </div>\n            </th>\n           \n            <th className=\"col\">Action</th>\n          </tr>\n        </thead>\n\n        <tbody className=\"body\">\n          {filteredItems.map((item) => (\n            <tr\n              className= {`row g-0 ${props.selectedInfraInstance===item ? \"active\" : \"\"} `}\n              key={item._id}\n              onClick={() => {\n                props.setSelectedInfraInstance(item)\n              }}\n\n            >\n              <td className=\"col\">{item._id}</td>\n              <td className=\"col\">{item.provider}</td>\n              <td className=\"col\">{item.delayTolerance.toString()}</td>\n              <td className=\"col\">{item.Downlink}</td>\n              <td className=\"col\">{item.Uplink}</td>\n              <td className=\"col\">\n                <SettingsTwoToneIcon className=\"button\" type=\"button\" />\n                <DeleteIcon className=\"button\" type=\"button\" />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default IPMonitoringList;\n","import \"./Chart.css\";\nimport moment from \"moment\"\nimport {\n  LineChart,\n  ResponsiveContainer,\n  Legend,\n  Tooltip,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n} from \"recharts\";\n\n// Sample chart data\nconst now = new Date().getTime();\nvar date = new Date(now);\nvar hour=3600000\nconst data = [\n  {\n    name: date,\n    value: 5000,\n  },\n  {\n    name: new Date(now+hour),\n    value: 5000,\n  },\n  {\n    name: new Date(now+2*hour),\n    value: 5000,\n  },\n  {\n    name: new Date(now+3*hour),\n    value: 20000,\n  },\n  {\n    name: new Date(now+4*hour),\n    value: 5000,\n  },\n  {\n    name: new Date(now+5*hour),\n    value: 5000,\n  },\n  {\n    name: new Date(now+6*hour),\n    value: 5000,\n  },\n  {\n    name: new Date(now+7*hour),\n    value: 15000,\n  },\n  {\n    name: new Date(now+8*hour),\n    value: 5000,\n  },\n  {\n    name: new Date(now+9*hour),\n    value: 5000,\n  },\n  {\n    name: new Date(now+10*hour),\n    value: 5000,\n  },\n  {\n    name: new Date(now+11*hour),\n    value: 5000,\n  },\n  {\n    name: new Date(now+12*hour),\n    value: 5000,\n  },\n];\n\nfunction ChartDown() {\n  return (\n    <div className=\"ChartContainer\">\n      <h4 className=\"title\">Downlink</h4>\n      <div className=\"Chart\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <LineChart data={data}> \n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis\n              dataKey=\"name\"\n              label={{ value: \"time\", position: \"insideBottomRight\", dy: 10 }}\n              tickFormatter={(unixTime) => moment(unixTime).format('HH:mm')}\n            />\n            <YAxis domain={[0, 20000]} label={{ value: \"kbps\", position: \"insideTop\",dy: 10 }}></YAxis>\n            <Legend />\n            <Tooltip />\n            <Line type=\"monotone\" dataKey=\"value\" stroke=\"black\" />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n}\n\nexport default ChartDown;\n","import \"./Chart.css\";\nimport moment from \"moment\"\nimport {\n  LineChart,\n  ResponsiveContainer,\n  Legend,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n} from \"recharts\";\n\n// Sample chart data\nconst now = new Date().getTime();\nvar date = new Date(now);\nvar hour=3600000\nconst data = [\n  {\n    name: date,\n    value: 954,\n  },\n  {\n    name: new Date(now+hour),\n    value: 954,\n  },\n  {\n    name: new Date(now+2*hour),\n    value: 954,\n  },\n  {\n    name: new Date(now+3*hour),\n    value: 954,\n  },\n  {\n    name: new Date(now+4*hour),\n    value: 954,\n  },\n  {\n    name: new Date(now+5*hour),\n    value: 954,\n  },\n  {\n    name: new Date(now+6*hour),\n    value: 954,\n  },\n  {\n    name: new Date(now+7*hour),\n    value: 954,\n  },\n  {\n    name: new Date(now+8*hour),\n    value: 954,\n  },\n  {\n    name: new Date(now+9*hour),\n    value: 954,\n  },\n  {\n    name: new Date(now+10*hour),\n    value: 954,\n  },\n  {\n    name: new Date(now+11*hour),\n    value: 954,\n  },\n  {\n    name: new Date(now+12*hour),\n    value: 954,\n  },\n];\n\nfunction ChartUp() {\n  return (\n    <div className=\"ChartContainer\">\n      <h4 className=\"title\">Uplink</h4>\n      <div className=\"Chart\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <LineChart data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis\n              dataKey=\"name\"\n              label={{ value: \"time\", position: \"insideBottomRight\", dy: 10 }}\n              tickFormatter={(unixTime) => moment(unixTime).format('HH:mm')}\n            />\n            <YAxis domain={[0, 20000]} label={{ value: \"kbps\", position: \"insideTop\",dy: 10 }}></YAxis>\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"value\" stroke=\"black\" />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n}\n\nexport default ChartUp;\n","import React, { useState } from \"react\";\nimport \"./IPMonitoring.css\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nimport IPMonitoringList from \"./IPMonitoringList/IPMonitoringList\";\nimport ChartDown from \"./Chart/ChartDown\";\nimport ChartUp from \"./Chart/ChartUp\";\n\n\n\nvar AllInfraInstances = [\n  {\n    _id: 1,\n    provider: \"Telekom\",\n    delayTolerance: true,\n    Downlink: 5000,\n    Uplink: 5000\n  },\n\n  {\n    _id: 2,\n    provider: \"Private 5G\",\n    delayTolerance: true,\n    Downlink: 5000,\n    Uplink: 5000\n  },\n\n  {\n    _id: 3,\n    provider: \"Telekom\",\n    delayTolerance: false,\n    Downlink: 10000,\n    Uplink: 10000\n  }\n]\n\n\nexport default function IPMonitoring(props) {\n\n  const [selectedInfraInstance, setSelectedInfraInstance] = useState(null);\n  return (\n    <div className=\"IPMonitoring\">\n      <h2>\n        IP Monitoring\n        <RefreshIcon type=\"button\" className=\"refreshButton\" />\n      </h2>\n      <div className=\"MapContainer\">\n        <div className=\"charts\">\n          <ChartDown />\n          <ChartUp/>\n          \n        </div>\n      </div>\n      <div className=\"table-Infra-Instances\">\n        <IPMonitoringList\n        AllInfraInstances={AllInfraInstances}\n        setSelectedInfraInstance={(elem)=> setSelectedInfraInstance(elem)}\n        selectedInfraInstance={selectedInfraInstance} />\n      </div>\n      \n    </div>\n  );\n}\n","import React from \"react\";\r\nimport \"./IPMainBody.css\"\r\nimport MarketMaps from \"./MarketMaps/MarketMaps\";\r\nimport IPMonitoring from \"./IPMonitoring/IPMonitoring\";\r\n\r\nfunction IPMainBody(props) {\r\n  \r\n  return (<div className=\"IPMainBody\">\r\n    {props.menu===\"MarketMaps\"&&<MarketMaps userRole={props.userRole} user={props.user}/>}\r\n    {props.menu === \"IPMonitoring\" && <IPMonitoring user={props.user} />}\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default IPMainBody;\r\n","import React from \"react\";\r\nimport \"./LeftSideMenu.css\";\r\nconst LeftSideMenu = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"sidebar-container\">\r\n        <div className=\"sidebar-logo\">ZIMO</div>\r\n        <ul className=\"sidebar-navigation\">\r\n          <li>\r\n            <div\r\n              onClick={() => props.setMenu(\"MarketMaps\")}\r\n              className={`${props.menu===\"MarketMaps\" ? \"active\" : \"\"} `}\r\n            >\r\n              <i className=\"fa fa-home\" aria-hidden=\"true\"></i> Overview\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div\r\n              onClick={() => props.setMenu(\"IPMonitoring\")}\r\n              className={`${props.menu===\"IPMonitoring\" ? \"active\" : \"\"} `}\r\n            >\r\n              <i className=\"fa fa-home\" aria-hidden=\"true\"></i> Monitoring\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeftSideMenu;\r\n","import React, { useState } from \"react\";\r\nimport MainHeader from \"../MainHeader/MainHeader\";\r\nimport MainFooter from \"../MainFooter/MainFooter\";\r\nimport IPMainBody from \"./IPMainBody/IPMainBody\";\r\nimport LeftSideMenu from \"../LeftsideMenu/LeftsideMenu\";\r\nfunction GUIInfraProvider(props) {\r\n  const [menu, setMenu] = useState(\"MarketMaps\");\r\n  return (\r\n    <>\r\n      <MainHeader\r\n        setLogin={() => props.setLogin(false)}\r\n        user={props.user}\r\n        userRole={props.userRole}\r\n      />\r\n      <LeftSideMenu menu={menu} setMenu={(elem) => setMenu(elem)}></LeftSideMenu>\r\n      <IPMainBody userRole={props.userRole} user={props.user} menu={menu} />\r\n      <MainFooter></MainFooter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GUIInfraProvider;\r\n","import React from \"react\";\r\nimport \"./LeftSideMenu.css\";\r\nconst AULeftSideMenu = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"sidebar-container\">\r\n        <div className=\"sidebar-logo\">ZIMO</div>\r\n        <ul className=\"sidebar-navigation\">\r\n          <li>\r\n            <div onClick={() => props.setMenu(\"AppGroupManagement\")} className={`${props.menu===\"AppGroupManagement\" ? \"active\" : \"\"} `}>\r\n              <i className=\"fa fa-tachometer\" aria-hidden=\"true\"></i> App Group\r\n              Management\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div onClick={() => props.setMenu(\"OrderApp\")} className={`${props.menu===\"OrderApp\" ? \"active\" : \"\"} `}>\r\n              <i className=\"fa fa-tachometer\" aria-hidden=\"true\"></i> Deployment/ Deployed App\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AULeftSideMenu;\r\n","import React from \"react\";\r\n\r\nconst ConfigApp = (props) => {\r\n  return (\r\n    <table className=\"table table-striped table-hover\">\r\n      <thead>\r\n        <tr className=\"row g-0\">\r\n          <th className=\"col\">Qualitiy of Service </th>\r\n          <th className=\"col\">Non-functional</th>\r\n          <th className=\"col\">Functional</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr className=\"row g-0\">\r\n          <td className=\"col\">\r\n            <table className=\"table table-striped table-hover\">\r\n              <tbody>\r\n                <tr className=\"row g-0\">\r\n                  <td className=\"col-9\">Latency</td>\r\n                  <td className=\"col-3\">\r\n                    <select\r\n                      id={\"Latency-\" + props.app._id}\r\n                      defaultValue={`${\r\n                        props.app.qos ? props.app.qos.latency : \"3\"\r\n                      }`}\r\n                    >\r\n                      <option value=\"1\">1</option>\r\n                      <option value=\"2\">2</option>\r\n                      <option value=\"3\">3</option>\r\n                      <option value=\"4\">4</option>\r\n                      <option value=\"5\">5</option>\r\n                    </select>\r\n                  </td>\r\n                </tr>\r\n                <tr className=\"row g-0\">\r\n                  <td className=\"col-9\">Throughput</td>\r\n                  <td className=\"col-3\">\r\n                    <select\r\n                      id={\"Throughput-\" + props.app._id}\r\n                      defaultValue={`${\r\n                        props.app.qos ? props.app.qos.throughput : \"3\"\r\n                      }`}\r\n                    >\r\n                      <option value=\"1\">1</option>\r\n                      <option value=\"2\">2</option>\r\n                      <option value=\"3\">3</option>\r\n                      <option value=\"4\">4</option>\r\n                      <option value=\"5\">5</option>\r\n                    </select>\r\n                  </td>\r\n                </tr>\r\n                <tr className=\"row g-0\">\r\n                  <td className=\"col-9\">Jitter</td>\r\n                  <td className=\"col-3\">\r\n                    <select\r\n                      id={\"Jitter-\" + props.app._id}\r\n                      defaultValue={`${\r\n                        props.app.qos ? props.app.qos.jitter : \"3\"\r\n                      }`}\r\n                    >\r\n                      <option value=\"1\">1</option>\r\n                      <option value=\"2\">2</option>\r\n                      <option value=\"3\">3</option>\r\n                      <option value=\"4\">4</option>\r\n                      <option value=\"5\">5</option>\r\n                    </select>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </td>\r\n\r\n          <td className=\"col\">\r\n            <table className=\"table table-striped table-hover\">\r\n              <tbody>\r\n                <tr className=\"row g-0\">\r\n                  <td className=\"col-9\">Reliability</td>\r\n                  <td className=\"col-3\">\r\n                    <select\r\n                      id={\"Reliability-\" + props.app._id}\r\n                      defaultValue={`${\r\n                        props.app.nonFunctional\r\n                          ? props.app.nonFunctional.reliability\r\n                          : \"3\"\r\n                      }`}\r\n                    >\r\n                      <option value=\"1\">1</option>\r\n                      <option value=\"2\">2</option>\r\n                      <option value=\"3\">3</option>\r\n                      <option value=\"4\">4</option>\r\n                      <option value=\"5\">5</option>\r\n                    </select>\r\n                  </td>\r\n                </tr>\r\n                <tr className=\"row g-0\">\r\n                  <td className=\"col-9\">Availability </td>\r\n                  <td className=\"col-3\">\r\n                    <select\r\n                      id={\"Availability-\" + props.app._id}\r\n                      defaultValue={`${\r\n                        props.app.nonFunctional\r\n                          ? props.app.nonFunctional.availability\r\n                          : \"3\"\r\n                      }`}\r\n                    >\r\n                      <option value=\"1\">1</option>\r\n                      <option value=\"2\">2</option>\r\n                      <option value=\"3\">3</option>\r\n                      <option value=\"4\">4</option>\r\n                      <option value=\"5\">5</option>\r\n                    </select>\r\n                  </td>\r\n                </tr>\r\n                <tr className=\"row g-0\">\r\n                  <td className=\"col-9\">Portability </td>\r\n                  <td className=\"col-3\">\r\n                    <select\r\n                      id={\"Portability-\" + props.app._id}\r\n                      defaultValue={`${\r\n                        props.app.nonFunctional\r\n                          ? props.app.nonFunctional.portability\r\n                          : \"3\"\r\n                      }`}\r\n                    >\r\n                      <option value=\"1\">1</option>\r\n                      <option value=\"2\">2</option>\r\n                      <option value=\"3\">3</option>\r\n                      <option value=\"4\">4</option>\r\n                      <option value=\"5\">5</option>\r\n                    </select>\r\n                  </td>\r\n                </tr>\r\n                <tr className=\"row g-0\">\r\n                  <td className=\"col-9\">Security </td>\r\n                  <td className=\"col-3\">\r\n                    <select\r\n                      id={\"Security-\" + props.app._id}\r\n                      defaultValue={`${\r\n                        props.app.nonFunctional\r\n                          ? props.app.nonFunctional.security\r\n                          : \"3\"\r\n                      }`}\r\n                    >\r\n                      <option value=\"1\">1</option>\r\n                      <option value=\"2\">2</option>\r\n                      <option value=\"3\">3</option>\r\n                      <option value=\"4\">4</option>\r\n                      <option value=\"5\">5</option>\r\n                    </select>\r\n                  </td>\r\n                </tr>\r\n                <tr className=\"row g-0\">\r\n                  <td className=\"col-9\">Usability </td>\r\n                  <td className=\"col-3\">\r\n                    <select\r\n                      id={\"Usability-\" + props.app._id}\r\n                      defaultValue={`${\r\n                        props.app.nonFunctional\r\n                          ? props.app.nonFunctional.usability\r\n                          : \"3\"\r\n                      }`}\r\n                    >\r\n                      <option value=\"1\">1</option>\r\n                      <option value=\"2\">2</option>\r\n                      <option value=\"3\">3</option>\r\n                      <option value=\"4\">4</option>\r\n                      <option value=\"5\">5</option>\r\n                    </select>\r\n                  </td>\r\n                </tr>\r\n                <tr className=\"row g-0\">\r\n                  <td className=\"col-9\">Cost </td>\r\n                  <td className=\"col-3\">\r\n                    <select\r\n                      id={\"Cost-\" + props.app._id}\r\n                      defaultValue={`${\r\n                        props.app.nonFunctional\r\n                          ? props.app.nonFunctional.cost\r\n                          : \"3\"\r\n                      }`}\r\n                    >\r\n                      <option value=\"1\">1</option>\r\n                      <option value=\"2\">2</option>\r\n                      <option value=\"3\">3</option>\r\n                      <option value=\"4\">4</option>\r\n                      <option value=\"5\">5</option>\r\n                    </select>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </td>\r\n          <td className=\"col\">\r\n            <table className=\"table table-striped table-hover\">\r\n              <tbody>\r\n                <tr className=\"row g-0\">\r\n                  <td className=\"col-6\">#Users</td>\r\n                  <td className=\"col-6\">\r\n                    <input\r\n                      id={\"#Users-\" + props.app._id}\r\n                      type=\"number\"\r\n                      className=\"userInput\"\r\n                      defaultValue={`${\r\n                        props.app.functional\r\n                          ? props.app.functional.numberOfUser\r\n                          : \"10\"\r\n                      }`}\r\n                    ></input>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default ConfigApp;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./SelectApp.css\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport ConfigApp from \"./ConfigApp\";\r\nimport { serverurl } from \"../../../../../../../logik/logik\";\r\nconst SelectApp = (props) => {\r\n  const [filteredString, setFilteredString] = useState(\"\");\r\n  const [filteredApps, setFilteredApps] = useState([]);\r\n  const [unSelected, setUnSelected] = useState([]);\r\n  useEffect(() => {\r\n    try {\r\n      fetch(`${serverurl}/app`)\r\n        .then((response) => response.json())\r\n        .then((data) =>\r\n          setUnSelected(\r\n            data.filter(\r\n              (elem) =>\r\n                !props.selected.some(\r\n                  (selectedApps) => selectedApps._id === elem._id\r\n                )\r\n            )\r\n          )\r\n        );\r\n    } catch (error) {\r\n      console.log(\"error!\");\r\n    }\r\n  }, [props.selected]);\r\n  useEffect(() => {\r\n    if (filteredString === \"\") {\r\n      setFilteredApps(unSelected);\r\n    } else {\r\n      setFilteredApps(\r\n        unSelected.filter((item) =>\r\n          Object.keys(item).some(\r\n            (elem) =>\r\n              elem !== \"_id\" && String(item[elem]).includes(filteredString)\r\n          )\r\n        )\r\n      );\r\n    }\r\n  }, [filteredString, unSelected]);\r\n\r\n  const addApp = (id) => {\r\n    props.setSelected([\r\n      ...props.selected,\r\n      unSelected.find((elem) => elem._id === id),\r\n    ]);\r\n    setUnSelected(unSelected.filter((elem) => elem._id !== id));\r\n  };\r\n\r\n  const deleteApp = (id) => {\r\n    setUnSelected([\r\n      ...unSelected,\r\n      props.selected.find((elem) => elem._id === id),\r\n    ]);\r\n    props.setSelected(props.selected.filter((elem) => elem._id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"AppGroupEdit\">\r\n      <table className=\"table table-striped table-hover\">\r\n        <thead>\r\n          <tr className=\"row g-0\">\r\n            <th className=\"col-3 header\">App Store</th>\r\n            <th className=\"col-9 header\">Selected Apps</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr className=\"row g-0\">\r\n            <td className=\"col-3\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr className=\"row g-0\">\r\n                    <th className=\" header\">\r\n                      <input\r\n                        className=\"searchApp\"\r\n                        onChange={(e) => {\r\n                          setFilteredString(e.target.value);\r\n                        }}\r\n                        placeholder=\"Search app\"\r\n                      ></input>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"fullbody\">\r\n                  {filteredApps.map((elem) => (\r\n                    <tr className=\"row g-0\" key={elem._id}>\r\n                      <td className=\"col-10\">\r\n                        <h6>\r\n                          {elem.name}[v{elem.version}]\r\n                        </h6>\r\n                        <div>Organization: {elem.organization}</div>\r\n                      </td>\r\n\r\n                      <td className=\"col-2\">\r\n                        <AddIcon\r\n                          type=\"button\"\r\n                          onClick={() => addApp(elem._id)}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </td>\r\n\r\n            <td className=\"col-9\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr className=\"row g-0\">\r\n                    <th className=\"col-3 header\">Apps</th>\r\n                    <th className=\"col-9 header\">Config</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"fullbody\">\r\n                  {props.selected &&\r\n                    props.selected.map((elem) => (\r\n                      <tr className=\"row g-0\" key={elem._id}>\r\n                        <td className=\"col-3\">\r\n                          <RemoveIcon\r\n                            type=\"button\"\r\n                            onClick={() => deleteApp(elem._id)}\r\n                          />\r\n                          {elem.name}[v{elem.version}]\r\n                        </td>\r\n                        <td className=\"col-9\">\r\n                          <ConfigApp app={elem} />\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </table>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\nexport default SelectApp;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport \"./EditAppGroup.css\";\r\nimport SettingsTwoToneIcon from \"@material-ui/icons/SettingsTwoTone\";\r\nimport SelectApp from \"./SelectApp/SelectApp\";\r\nimport { serverurl } from \"../../../../../../logik/logik\";\r\nconst EditAppGroup = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  const closeModal = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const openModal = () => {\r\n    setShow(true);\r\n    setSelected(props.appGroup.apps);\r\n  };\r\n  const [appGroupData, setAppGroupData] = useState();\r\n  const [selected, setSelected] = useState();\r\n\r\n  const getAppConfigData = (app) => {\r\n    var Latency = document.getElementById(\"Latency-\" + app._id).value;\r\n    var Throughput = document.getElementById(\"Throughput-\" + app._id).value;\r\n    var Jitter = document.getElementById(\"Jitter-\" + app._id).value;\r\n    var Reliability = document.getElementById(\"Reliability-\" + app._id).value;\r\n    var Availability = document.getElementById(\"Availability-\" + app._id).value;\r\n    var Portability = document.getElementById(\"Portability-\" + app._id).value;\r\n    var Security = document.getElementById(\"Security-\" + app._id).value;\r\n    var Usability = document.getElementById(\"Usability-\" + app._id).value;\r\n    var Cost = document.getElementById(\"Cost-\" + app._id).value;\r\n    var Users = document.getElementById(\"#Users-\" + app._id).value;\r\n\r\n    var data;\r\n    data = {\r\n      _id: app._id,\r\n      name: app.name,\r\n      version: app.version,\r\n      organization: app.organization,\r\n      qos: { latency: Latency, throughput: Throughput, jitter: Jitter },\r\n      nonFunctional: {\r\n        reliability: Reliability,\r\n        availability: Availability,\r\n        portability: Portability,\r\n        security: Security,\r\n        usability: Usability,\r\n        cost: Cost,\r\n      },\r\n      functional: { numberOfUser: Users },\r\n    };\r\n\r\n    return data;\r\n  };\r\n  const getAllData = () => {\r\n    var name = document.getElementById(\"EditAppGroup\").value;\r\n    var i = 0;\r\n    var apps = [];\r\n    for (i; i < selected.length; i++) {\r\n      apps.push(getAppConfigData(selected[i]));\r\n    }\r\n    var AppGroup = {\r\n      user: props.user,\r\n      name: name,\r\n      apps: apps,\r\n    };\r\n    return AppGroup;\r\n  };\r\n\r\n  const sendInfoToServer = async () => {\r\n    const importData = getAllData();\r\n    try {\r\n      fetch(`${serverurl}/appgroup?id=${props.appGroup._id}`, {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(importData),\r\n      }).then(() => {\r\n        props.refresh();\r\n        props.setSelectedApp();\r\n        closeModal();\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"EditAppGroup\">\r\n      <SettingsTwoToneIcon\r\n        type=\"button\"\r\n        className=\"button\"\r\n        onClick={() => openModal()}\r\n      />\r\n\r\n      <Modal size=\"xl\" scrollable={true} show={show} onHide={closeModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit AppGroup's Information <input\r\n            id=\"EditAppGroup\"\r\n            placeholder=\"App Group Name\"\r\n            defaultValue={props.appGroup.name}\r\n          /></Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          \r\n          <SelectApp\r\n            appGroupData={appGroupData}\r\n            setAppGroupData={(elem) => setAppGroupData(elem)}\r\n            selected={selected}\r\n            setSelected={(elem) => setSelected(elem)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={closeModal}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={sendInfoToServer}>\r\n            Save\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditAppGroup;\r\n","import React, { useState,useCallback, useRef } from \"react\";\r\nimport { GoogleMap, Marker, Circle } from \"@react-google-maps/api\";\r\nimport \"./Map.css\";\r\nimport MapStyle from \"./MapStyle\";\r\nconst mapContainerStyle = {\r\n  width: \"100%\",\r\n  height: \"49vh\",\r\n  float: \"right\",\r\n};\r\nconst center = {\r\n  lat: 52.51651,\r\n  lng: 13.33578,\r\n};\r\n\r\nconst options = {\r\n  styles: MapStyle,\r\n};\r\n\r\nconst Map = (props) => {\r\n  const [showCircle, setShowCircle] = useState(true);\r\n  const mapRef = useRef();\r\n  const onMapLoad = useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n  return (\r\n    <div className=\"GoogleMapSelectArea\">\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={13}\r\n        center={center}\r\n        options={options}\r\n        onLoad={onMapLoad}\r\n        onClick={props.onMapClick}\r\n      >\r\n        {props.selectedLat && props.selectedLng && (\r\n          <Marker\r\n            position={{ lat: +props.selectedLat, lng: +props.selectedLng }}\r\n            \r\n          />\r\n        )}\r\n        {props.selectedLat && props.selectedLng && showCircle && (\r\n          <Circle\r\n            center={{ lat: +props.selectedLat, lng: +props.selectedLng }}\r\n            radius={props.radius * 1000}\r\n            options={{\r\n              strokeColor: \"#68b9f2\",\r\n              fillColor: \"#2a5777\",\r\n            }}\r\n          />\r\n        )}\r\n        )\r\n        <button\r\n          className=\"button\"\r\n          variant=\"primary\"\r\n          onClick={() => setShowCircle(!showCircle)}\r\n        >\r\n          Coverage\r\n        </button>\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n};\r\nexport default Map;\r\n","\r\n\r\nconst MapStyle= [\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#444444\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f2f2f2\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": -100\r\n            },\r\n            {\r\n                \"lightness\": 45\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"simplified\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#c0e4f3\"\r\n            },\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n\r\nexport default MapStyle;","import React, { useState } from \"react\";\r\nimport \"./ViewDetail.css\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { setStar } from \"../../../../../../../logik/logik\";\r\n\r\nconst ViewDetailQoS = (props) => {\r\n  const [showDetail, setShowDetail] = useState(false);\r\n  const compareAppQOS = (reqAppGroup, res) => {\r\n    var app = reqAppGroup.find((elem) => elem._id === res._id);\r\n    return (\r\n      app.qos.latency <= res.qos.latency &&\r\n      app.qos.throughput <= res.qos.throughput &&\r\n      app.qos.jitter <= res.qos.jitter\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {compareAppQOS(props.reqApps, props.resApp) && <CheckIcon onMouseOver={() => setShowDetail(true)}\r\n          onMouseOut={() => setShowDetail(false)}/>}\r\n\r\n      {!compareAppQOS(props.reqApps, props.resApp) && (\r\n        <ClearIcon\r\n          onMouseOver={() => setShowDetail(true)}\r\n          onMouseOut={() => setShowDetail(false)}\r\n        />\r\n      )}\r\n      {showDetail&& (\r\n        <table className=\"ontop\">\r\n     \r\n            <thead>\r\n                <tr>\r\n                <th>Config</th>  \r\n                <th>required</th>\r\n                <th>offer</th>\r\n                </tr>\r\n            </thead>\r\n          <tbody>\r\n            <tr className=\"row g-0\">\r\n              <td className=\"col\">Latency</td>\r\n              <td className=\"col-4 \">{setStar(props.reqApps.find((elem) => elem._id === props.resApp._id).qos.latency)}</td>\r\n              <td className=\"col-4 \">{setStar(props.resApp.qos.latency)}</td>\r\n            </tr>\r\n            <tr className=\"row g-0\">\r\n              <td className=\"col\">throughput </td>\r\n              <td className=\"col-4 \">{setStar(props.reqApps.find((elem) => elem._id === props.resApp._id).qos.throughput)}</td>\r\n              <td className=\"col-4\">{setStar(props.resApp.qos.throughput)}</td>\r\n            </tr>\r\n            <tr className=\"row g-0\">\r\n              <td className=\"col\">Jitter </td>\r\n              <td className=\"col-4 \">{setStar(props.reqApps.find((elem) => elem._id === props.resApp._id).qos.jitter)}</td>\r\n              <td className=\"col-4\">{setStar(props.resApp.qos.jitter)}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewDetailQoS;\r\n","import React, { useState } from \"react\";\r\nimport \"./ViewDetail.css\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\n\r\nconst ViewDetailFunctional = (props) => {\r\n  const [showDetail, setShowDetail] = useState(false);\r\n  const compareAppFunctional = (reqAppGroup, res) => {\r\n    var app = reqAppGroup.find((elem) => elem._id === res._id);\r\n    return (\r\n      app.functional.numberOfUser <= res.functional.numberOfUser\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {compareAppFunctional(props.reqApps, props.resApp) && <CheckIcon onMouseOver={() => setShowDetail(true)}\r\n          onMouseOut={() => setShowDetail(false)}/>}\r\n\r\n      {!compareAppFunctional(props.reqApps, props.resApp) && (\r\n        <ClearIcon\r\n          onMouseOver={() => setShowDetail(true)}\r\n          onMouseOut={() => setShowDetail(false)}\r\n        />\r\n      )}\r\n      {showDetail&& (\r\n        <table className=\"ontop\">\r\n     \r\n            <thead>\r\n                <tr>\r\n                <th>Config</th>  \r\n                <th>required</th>\r\n                <th>offer</th>\r\n                </tr>\r\n            </thead>\r\n          <tbody>\r\n            <tr className=\"row g-0\">\r\n              <td className=\"col\">Users</td>\r\n              <td className=\"col-4 \">{props.reqApps.find((elem) => elem._id === props.resApp._id).functional.numberOfUser}</td>\r\n              <td className=\"col-4 \">{props.resApp.functional.numberOfUser}</td>\r\n            </tr>\r\n            \r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewDetailFunctional;\r\n","import React, { useState } from \"react\";\r\nimport \"./ViewDetail.css\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { setStar } from \"../../../../../../../logik/logik\";\r\n\r\nconst ViewDetailNonFunctional = (props) => {\r\n  const [showDetail, setShowDetail] = useState(false);\r\n  const compareAppNonFunctional = (reqAppGroup, res) => {\r\n    var app = reqAppGroup.find((elem) => elem._id === res._id);\r\n    return (\r\n      app.nonFunctional.reliability <= res.nonFunctional.reliability &&\r\n      app.nonFunctional.availability <= res.nonFunctional.availability &&\r\n      app.nonFunctional.portability <= res.nonFunctional.portability &&\r\n      app.nonFunctional.security <= res.nonFunctional.security &&\r\n      app.nonFunctional.usability <= res.nonFunctional.usability&&\r\n      app.nonFunctional.cost <= res.nonFunctional.cost\r\n\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {compareAppNonFunctional(props.reqApps, props.resApp) && <CheckIcon onMouseOver={() => setShowDetail(true)}\r\n          onMouseOut={() => setShowDetail(false)}/>}\r\n\r\n      {!compareAppNonFunctional(props.reqApps, props.resApp) && (\r\n        <ClearIcon\r\n          onMouseOver={() => setShowDetail(true)}\r\n          onMouseOut={() => setShowDetail(false)}\r\n        />\r\n      )}\r\n      {showDetail&& (\r\n        <table className=\"ontop \">\r\n     \r\n            <thead>\r\n                <tr>\r\n                <th>Config</th>  \r\n                <th>required</th>\r\n                <th>offer</th>\r\n                </tr>\r\n            </thead>\r\n          <tbody>\r\n            <tr className=\"row g-0\">\r\n              <td className=\"col\">Reliability</td>\r\n              <td className=\"col-4 \">{setStar(props.reqApps.find((elem) => elem._id === props.resApp._id).nonFunctional.reliability)}</td>\r\n              <td className=\"col-4 \">{setStar(props.resApp.nonFunctional.reliability)}</td>\r\n            </tr>\r\n            <tr className=\"row g-0\">\r\n              <td className=\"col\">Availability </td>\r\n              <td className=\"col-4 \">{setStar(props.reqApps.find((elem) => elem._id === props.resApp._id).nonFunctional.availability )}</td>\r\n              <td className=\"col-4\">{setStar(props.resApp.nonFunctional.availability )}</td>\r\n            </tr>\r\n            <tr className=\"row g-0\">\r\n              <td className=\"col\">Portability </td>\r\n              <td className=\"col-4 \">{setStar(props.reqApps.find((elem) => elem._id === props.resApp._id).nonFunctional.portability)}</td>\r\n              <td className=\"col-4\">{setStar(props.resApp.nonFunctional.portability)}</td>\r\n            </tr>\r\n            <tr className=\"row g-0\">\r\n              <td className=\"col\">Security </td>\r\n              <td className=\"col-4 \">{setStar(props.reqApps.find((elem) => elem._id === props.resApp._id).nonFunctional.security)}</td>\r\n              <td className=\"col-4\">{setStar(props.resApp.nonFunctional.security)}</td>\r\n            </tr>\r\n            <tr className=\"row g-0\">\r\n              <td className=\"col\">Usability </td>\r\n              <td className=\"col-4 \">{setStar(props.reqApps.find((elem) => elem._id === props.resApp._id).nonFunctional.usability)}</td>\r\n              <td className=\"col-4\">{setStar(props.resApp.nonFunctional.usability)}</td>\r\n            </tr>\r\n            <tr className=\"row g-0\">\r\n              <td className=\"col\">Cost </td>\r\n              <td className=\"col-4 \">{setStar(props.reqApps.find((elem) => elem._id === props.resApp._id).nonFunctional.cost)}</td>\r\n              <td className=\"col-4\">{setStar(props.resApp.nonFunctional.cost)}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewDetailNonFunctional;\r\n","import  { React } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport \"./DeploymentOptions.css\";\r\nimport {serverurl} from \"../../../../../../../logik/logik\" \r\nimport ViewDetailQoS from \"./ViewDetailQoS\";\r\nimport ViewDetailFunctional from \"./ViewDetailFunctional\";\r\nimport ViewDetailNonFunctional from \"./ViewDetailNonFunctional\";\r\n\r\n\r\nconst DeploymentOptions = (props) => {\r\n\r\n  let deployBtnHandler = () => {\r\n    fetch(`${serverurl}/slicerequest`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        sliceconfig: {\r\n          id: 1,\r\n          delay: \"0b11\",\r\n          uplink_slice: 20,\r\n          downlink_slice: 20\r\n        }\r\n      })\r\n    })\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .then((data) => {\r\n      console.log(data);\r\n      props.closeShowOptions();\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      className=\"DeploymentOptions\"\r\n      size=\"xl\"\r\n      scrollable={true}\r\n      show={props.showOptions}\r\n      onHide={props.closeShowOptions}\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Deployment Options:</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <h4>Select deployment option</h4>\r\n        <table className=\"table table-striped table-hover\">\r\n          <thead>\r\n            <tr className=\"row g-0\">\r\n              <th className=\"col-1 text-center\">Options</th>\r\n              <th className=\"col text-center\">Deployment Information</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"DeploymentOptionsBody\">\r\n            {props.options.map((option, index) => (\r\n              <tr className=\"row g-0\" key={option._id}>\r\n                <td className=\"col-1 text-center ButtonContainer\">\r\n                  Option {index + 1}\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    className=\"bottom\"\r\n\r\n                    onClick={deployBtnHandler}\r\n                  >\r\n                    Deploy\r\n                  </Button>\r\n                </td>\r\n\r\n                <td className=\"col\">\r\n                  <table className=\"table table-striped table-hover\">\r\n                    <thead>\r\n                      <tr className=\"row g-0\">\r\n                        <th className=\"col-2\">Apps</th>\r\n                        <th className=\"col-3\">Network</th>\r\n                        <th className=\"col-3\">Cloud</th>\r\n                        <th className=\"col-4\">Config</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {option.apps.map((app) => (\r\n                        <tr className=\"row g-0\" key={app._id}>\r\n                          <td className=\"col-2\">{app.name}</td>\r\n                          <td className=\"col-3\">{app.network.provider}</td>\r\n                          <td className=\"col-3\">{app.cloud.provider}</td>\r\n                          <td className=\"col-4\">\r\n                            <table className=\"table table-striped table-hover\">\r\n                              <tbody>\r\n                                <tr className=\"row g-0\">\r\n                                  <td className=\"col\">Qualitiy of Service</td>\r\n                                  <td className=\"col-2 windowcontainer\">\r\n                                    <ViewDetailQoS\r\n                                      reqApps={props.appGroup.apps}\r\n                                      resApp={app}\r\n                                    />\r\n                                  </td>\r\n                                </tr>\r\n                                <tr className=\"row g-0\">\r\n                                  <td className=\"col\">Non-Functional </td>\r\n                                  <td className=\"col-2 windowcontainer\">\r\n                                    <ViewDetailNonFunctional\r\n                                      reqApps={props.appGroup.apps}\r\n                                      resApp={app}\r\n                                    />\r\n                                  </td>\r\n                                </tr>\r\n\r\n                                <tr className=\"row g-0\">\r\n                                  <td className=\"col\">Functional </td>\r\n                                  <td className=\"col-2 windowcontainer\">\r\n                                    <ViewDetailFunctional\r\n                                      reqApps={props.appGroup.apps}\r\n                                      resApp={app}\r\n                                    />\r\n                                  </td>\r\n                                </tr>\r\n                              </tbody>\r\n                            </table>\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DeploymentOptions;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport Launch from \"@material-ui/icons/Launch\";\r\nimport \"./OrderApp.css\";\r\nimport moment from \"moment\";\r\nimport Map from \"./Map/Map\";\r\nimport DeploymentOptions from \"./DeploymentOptions/DeploymentOptions\";\r\nimport { serverurl } from \"../../../../../../logik/logik\";\r\n \r\nconst OrderApp = (props) => {\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const [selectedLat, setSelectedLat] = useState(0);\r\n  const [selectedLng, setSelectedLng] = useState(0);\r\n  const changeLat = (lat) => setSelectedLat(lat);\r\n  const changeLng = (lng) => setSelectedLng(lng);\r\n\r\n  const [radius, setRadius] = useState(0);\r\n\r\n  const onMapClick = useCallback((event) => {\r\n    changeLat(event.latLng.lat());\r\n    changeLng(event.latLng.lng());\r\n  }, []);\r\n  const [show, setShow] = useState(false);\r\n  const closeModal = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  const [showOptions, setShowOption] = useState(false);\r\n  const closeShowOptions = () => {\r\n    setShowOption(false);\r\n  };\r\n\r\n  const getData = () => {\r\n    var begin = document.getElementById(\"begin\").value;\r\n    var end = document.getElementById(\"end\").value;\r\n    var data = {\r\n      appGroup: props.appGroup,\r\n      position: {\r\n        lat: selectedLat,\r\n        lng: selectedLng,\r\n      },\r\n      radius: radius,\r\n      begin: begin,\r\n      end: end,\r\n    };\r\n\r\n    return data;\r\n  };\r\n\r\n  const moveToOptions = async () => {\r\n    try {\r\n      fetch(`${serverurl}/getoptions`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(getData()),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setOptions(data);\r\n          closeModal();\r\n\r\n          setShowOption(true);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Launch type=\"button\" className=\"button\" onClick={() => setShow(true)} />\r\n      <Modal\r\n        className=\"OrderAppGroup\"\r\n        size=\"xl\"\r\n        scrollable={true}\r\n        show={show}\r\n        onHide={closeModal}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Deploy App Group: {props.appGroup.name}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h4>Select Area to deploy</h4>\r\n          <div className=\"MapContainer\">\r\n            <Map\r\n              radius={radius}\r\n              selectedLat={selectedLat}\r\n              selectedLng={selectedLng}\r\n              onMapClick={onMapClick}\r\n            />\r\n          </div>\r\n          <div className=\"InputContainer\">\r\n            <div className=\"AreaInfo\">\r\n              Latitude:\r\n              <input\r\n                className=\"input\"\r\n                value={selectedLat}\r\n                type=\"number\"\r\n                onChange={(e) => {\r\n                  changeLat(e.target.value);\r\n                }}\r\n                placeholder=\"Latitude\"\r\n              />\r\n            </div>\r\n            <div className=\"AreaInfo\">\r\n              Longtitude:\r\n              <input\r\n                className=\"input\"\r\n                value={selectedLng}\r\n                type=\"number\"\r\n                onChange={(e) => {\r\n                  changeLng(e.target.value);\r\n                }}\r\n                placeholder=\"Longtitude\"\r\n              />\r\n            </div>\r\n            <div className=\"AreaInfo\">\r\n              Radius:\r\n              <input\r\n                className=\"input\"\r\n                value={radius}\r\n                type=\"number\"\r\n                onChange={(e) => {\r\n                  setRadius(e.target.value);\r\n                }}\r\n                placeholder=\"Radius\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"InputContainer\">\r\n            <div className=\"AreaInfo\">\r\n              From:\r\n              <input\r\n                id=\"begin\"\r\n                className=\"input\"\r\n                type=\"datetime-local\"\r\n                defaultValue={moment().format(\"YYYY-MM-DDTHH:mm\")}\r\n              />\r\n            </div>\r\n            <div className=\"AreaInfo\">\r\n              Until:\r\n              <input\r\n                id=\"end\"\r\n                className=\"input\"\r\n                type=\"datetime-local\"\r\n                defaultValue={moment()\r\n                  .add(1, \"days\")\r\n                  .format(\"YYYY-MM-DDTHH:mm\")}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={closeModal}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={moveToOptions}>\r\n            Deploy\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <DeploymentOptions\r\n        showOptions={showOptions}\r\n        closeShowOptions={closeShowOptions}\r\n        options={options}\r\n        appGroup={props.appGroup}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderApp;\r\n","import React, { useState } from \"react\";\r\nimport \"./AppGroup.css\";\r\nimport {setStar} from \"../../../../../logik/logik\"\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport EditAppGroup from \"./EditAppGroup/EditAppGroup\";\r\nimport OrderApp from \"./OrderApp/OrderApp\";\r\nconst AppGroup = (props) => {\r\n  const [selectedApp, setSelectedApp] = useState();\r\n  \r\n  \r\n  return (\r\n    <tr className=\"row g-0 AppGroup\">\r\n      <td className=\"col\">{props.appGroup.name}</td>\r\n      <td className=\"col\">\r\n        {props.appGroup.apps.map((elem) => (\r\n          <div\r\n            type=\"button\"\r\n            key={elem._id}\r\n            onClick={() => setSelectedApp(elem)}\r\n            className={`${\r\n              selectedApp && selectedApp._id === elem._id ? \"active\" : \"\"\r\n            } `}\r\n          >\r\n            {elem.name}[v{elem.version}]\r\n          </div>\r\n        ))}\r\n      </td>\r\n      <td className=\"col-7\">\r\n      {!selectedApp && <h4> select an app to see config</h4>}\r\n        {selectedApp && (\r\n          <>\r\n            <h4>Organization: {selectedApp.organization}</h4>\r\n            <table className=\"table table-striped table-hover\">\r\n              <thead>\r\n                <tr className=\"row g-0\">\r\n                  <th className=\"col\">Qualitiy of Service </th>\r\n                  <th className=\"col\">Non-functional</th>\r\n                  <th className=\"col\">Functional</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr className=\"row g-0\">\r\n                  <td className=\"col\">\r\n                    <table className=\"table table-striped table-hover\">\r\n                      <tbody>\r\n                        <tr className=\"row g-0\">\r\n                          <td className=\"col\">Latency</td>\r\n                          <td className=\"col-7 text-end\">\r\n                            {setStar(selectedApp.qos.latency)}\r\n                          </td>\r\n                        </tr>\r\n                        <tr className=\"row g-0\">\r\n                          <td className=\"col\">Throughput</td>\r\n                          <td className=\"col-7 text-end\">\r\n                            {setStar(selectedApp.qos.throughput)}\r\n                          </td>\r\n                        </tr>\r\n                        <tr className=\"row g-0\">\r\n                          <td className=\"col\">Jitter</td>\r\n                          <td className=\"col-7 text-end\">\r\n                            {setStar(selectedApp.qos.jitter)}\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </td>\r\n\r\n                  <td className=\"col\">\r\n                    <table className=\"table table-striped table-hover\">\r\n                      <tbody>\r\n                        <tr className=\"row g-0\">\r\n                          <td className=\"col\">reliability</td>\r\n                          <td className=\"col-7 text-end\">\r\n                            {setStar(selectedApp.nonFunctional.reliability)}\r\n                          </td>\r\n                        </tr>\r\n                        <tr className=\"row g-0\">\r\n                          <td className=\"col\">availability </td>\r\n                          <td className=\"col-7 text-end\">\r\n                            {setStar(selectedApp.nonFunctional.availability)}\r\n                          </td>\r\n                        </tr>\r\n                        <tr className=\"row g-0\">\r\n                          <td className=\"col\">portability </td>\r\n                          <td className=\"col-7 text-end\">\r\n                            {setStar(selectedApp.nonFunctional.portability)}\r\n                          </td>\r\n                        </tr>\r\n                        <tr className=\"row g-0\">\r\n                          <td className=\"col\">security </td>\r\n                          <td className=\"col-7 text-end\">\r\n                            {setStar(selectedApp.nonFunctional.security)}\r\n                          </td>\r\n                        </tr>\r\n                        <tr className=\"row g-0\">\r\n                          <td className=\"col\">usability </td>\r\n                          <td className=\"col-7 text-end\">\r\n                            {setStar(selectedApp.nonFunctional.usability)}\r\n                          </td>\r\n                        </tr>\r\n                        <tr className=\"row g-0\">\r\n                          <td className=\"col\">cost </td>\r\n                          <td className=\"col-7 text-end\">\r\n                            {setStar(selectedApp.nonFunctional.cost)}\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </td>\r\n                  <td className=\"col\">\r\n                    <table className=\"table table-striped table-hover\">\r\n                      <tbody>\r\n                        <tr className=\"row g-0\">\r\n                          <td className=\"col\">#Users</td>\r\n                          <td className=\"col-7\">\r\n                            {selectedApp.functional.numberOfUser}\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </>\r\n        )}\r\n      </td>\r\n      <td className=\"col\">\r\n        <OrderApp appGroup={props.appGroup} />\r\n        <EditAppGroup\r\n          appGroup={props.appGroup}\r\n          setSelectedApp={(elem) => setSelectedApp(elem)}\r\n          refresh={props.refresh}\r\n        />\r\n        <DeleteIcon\r\n          className=\"button\"\r\n          type=\"button\"\r\n          onClick={() => props.deleteApp(props.appGroup._id)}\r\n        />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default AppGroup;\r\n","import React from \"react\";\r\n\r\nconst ConfigApp = (props) => {\r\n  return (\r\n    <table className=\"table table-striped table-hover\">\r\n      <thead>\r\n        <tr className=\"row g-0\">\r\n          <th className=\"col\">Qualitiy of Service </th>\r\n          <th className=\"col\">Non-functional</th>\r\n          <th className=\"col\">Functional</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr className=\"row g-0\">\r\n          <td className=\"col\">\r\n            <table className=\"table table-striped table-hover\">\r\n              <tbody>\r\n                <tr className=\"row g-0\">\r\n                  <td className=\"col-9\">Latency</td>\r\n                  <td className=\"col-3\">\r\n                    <select id={\"Latency-\"+props.app._id} defaultValue=\"3\">\r\n                      <option value=\"1\">1</option>\r\n                      <option value=\"2\">2</option>\r\n                      <option value=\"3\">3</option>\r\n                      <option value=\"4\">4</option>\r\n                      <option value=\"5\">5</option>\r\n                    </select>\r\n                  </td>\r\n                </tr>\r\n                <tr className=\"row g-0\">\r\n                  <td className=\"col-9\">Throughput</td>\r\n                  <td className=\"col-3\">\r\n                    <select id={\"Throughput-\"+props.app._id} defaultValue=\"3\">\r\n                      <option value=\"1\">1</option>\r\n                      <option value=\"2\">2</option>\r\n                      <option value=\"3\">3</option>\r\n                      <option value=\"4\">4</option>\r\n                      <option value=\"5\">5</option>\r\n                    </select>\r\n                  </td>\r\n                </tr>\r\n                <tr className=\"row g-0\">\r\n                  <td className=\"col-9\">Jitter</td>\r\n                  <td className=\"col-3\">\r\n                    <select id={\"Jitter-\"+props.app._id} defaultValue=\"3\">\r\n                      <option value=\"1\">1</option>\r\n                      <option value=\"2\">2</option>\r\n                      <option value=\"3\">3</option>\r\n                      <option value=\"4\">4</option>\r\n                      <option value=\"5\">5</option>\r\n                    </select>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </td>\r\n\r\n          <td className=\"col\">\r\n            <table className=\"table table-striped table-hover\">\r\n              <tbody>\r\n                <tr className=\"row g-0\">\r\n                  <td className=\"col-9\">Reliability</td>\r\n                  <td className=\"col-3\">\r\n                    <select id={\"Reliability-\"+props.app._id} defaultValue=\"3\">\r\n                      <option value=\"1\">1</option>\r\n                      <option value=\"2\">2</option>\r\n                      <option value=\"3\">3</option>\r\n                      <option value=\"4\">4</option>\r\n                      <option value=\"5\">5</option>\r\n                    </select>\r\n                  </td>\r\n                </tr>\r\n                <tr className=\"row g-0\">\r\n                  <td className=\"col-9\">Availability </td>\r\n                  <td className=\"col-3\">\r\n                    <select id={\"Availability-\"+props.app._id} defaultValue=\"3\">\r\n                      <option value=\"1\">1</option>\r\n                      <option value=\"2\">2</option>\r\n                      <option value=\"3\">3</option>\r\n                      <option value=\"4\">4</option>\r\n                      <option value=\"5\">5</option>\r\n                    </select>\r\n                  </td>\r\n                </tr>\r\n                <tr className=\"row g-0\">\r\n                  <td className=\"col-9\">Portability </td>\r\n                  <td className=\"col-3\">\r\n                    <select id={\"Portability-\"+props.app._id} defaultValue=\"3\">\r\n                      <option value=\"1\">1</option>\r\n                      <option value=\"2\">2</option>\r\n                      <option value=\"3\">3</option>\r\n                      <option value=\"4\">4</option>\r\n                      <option value=\"5\">5</option>\r\n                    </select>\r\n                  </td>\r\n                </tr>\r\n                <tr className=\"row g-0\">\r\n                  <td className=\"col-9\">Security </td>\r\n                  <td className=\"col-3\">\r\n                    <select id={\"Security-\"+props.app._id} defaultValue=\"3\">\r\n                      <option value=\"1\">1</option>\r\n                      <option value=\"2\">2</option>\r\n                      <option value=\"3\">3</option>\r\n                      <option value=\"4\">4</option>\r\n                      <option value=\"5\">5</option>\r\n                    </select>\r\n                  </td>\r\n                </tr>\r\n                <tr className=\"row g-0\">\r\n                  <td className=\"col-9\">Usability </td>\r\n                  <td className=\"col-3\">\r\n                    <select id={\"Usability-\"+props.app._id} defaultValue=\"3\">\r\n                      <option value=\"1\">1</option>\r\n                      <option value=\"2\">2</option>\r\n                      <option value=\"3\">3</option>\r\n                      <option value=\"4\">4</option>\r\n                      <option value=\"5\">5</option>\r\n                    </select>\r\n                  </td>\r\n                </tr>\r\n                <tr className=\"row g-0\">\r\n                  <td className=\"col-9\">Cost </td>\r\n                  <td className=\"col-3\">\r\n                    <select id={\"Cost-\"+props.app._id} defaultValue=\"3\">\r\n                      <option value=\"1\">1</option>\r\n                      <option value=\"2\">2</option>\r\n                      <option value=\"3\">3</option>\r\n                      <option value=\"4\">4</option>\r\n                      <option value=\"5\">5</option>\r\n                    </select>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </td>\r\n          <td className=\"col\">\r\n            <table className=\"table table-striped table-hover\">\r\n              <tbody>\r\n                <tr className=\"row g-0\">\r\n                  <td className=\"col-6\">#Users</td>\r\n                  <td className=\"col-6\">\r\n                    <input\r\n                      id={\"#Users-\"+props.app._id}\r\n                      type=\"number\"\r\n                      className=\"userInput\"\r\n                      defaultValue=\"10\"\r\n                    ></input>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default ConfigApp;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./SelectApp.css\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport ConfigApp from \"./ConfigApp\";\r\nimport { serverurl } from \"../../../../../../logik/logik\";\r\nconst SelectApp = (props) => {\r\n  const [filteredString, setFilteredString] = useState(\"\");\r\n  const [filteredApps, setFilteredApps] = useState([]);\r\n  const [unSelected, setUnSelected] = useState([]);\r\n  useEffect(() => {\r\n    try {\r\n      fetch(`${serverurl}/app`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setUnSelected(data);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"error!\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (filteredString === \"\") {\r\n      setFilteredApps(unSelected);\r\n    } else {\r\n      setFilteredApps(\r\n        unSelected.filter((item) =>\r\n          Object.keys(item).some(\r\n            (elem) =>\r\n              elem !== \"_id\" && String(item[elem]).includes(filteredString)\r\n          )\r\n        )\r\n      );\r\n    }\r\n  }, [filteredString, unSelected]);\r\n\r\n  const addApp = (id) => {\r\n    props.setSelected([\r\n      ...props.selected,\r\n      unSelected.find((elem) => elem._id === id),\r\n    ]);\r\n    setUnSelected(unSelected.filter((elem) => elem._id !== id));\r\n  };\r\n\r\n  const deleteApp = (id) => {\r\n    setUnSelected([\r\n      ...unSelected,\r\n      props.selected.find((elem) => elem._id === id),\r\n    ]);\r\n    props.setSelected(props.selected.filter((elem) => elem._id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"AppGroupConfig\">\r\n      <table className=\"table table-striped table-hover\">\r\n        <thead> \r\n          <tr className=\"row g-0\">\r\n            <th className=\"col-3 header\">App Store</th>\r\n            <th className=\"col-9 header\">Selected Apps</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr className=\"row g-0\">\r\n            <td className=\"col-3\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr className=\"row g-0\">\r\n                    <th className=\" header\">\r\n                      <input\r\n                        className=\"searchApp\"\r\n                        onChange={(e) => {\r\n                          setFilteredString(e.target.value);\r\n                        }}\r\n                         placeholder=\"Search app\"\r\n                      ></input>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"fullbody\">\r\n                  {filteredApps.map((elem) => (\r\n                    <tr className=\"row g-0\" key={elem._id}>\r\n                      <td className=\"col-10\">\r\n                        <h6>{elem.name}[v{elem.version}]</h6>\r\n                        <div>Organization: {elem.organization}</div>\r\n                        \r\n                      </td>\r\n\r\n                      <td className=\"col-2\">\r\n                        <AddIcon\r\n                          type=\"button\"\r\n                          onClick={() => addApp(elem._id)}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </td>\r\n\r\n            <td className=\"col-9\">\r\n              <table className=\"table table-striped table-hover\">\r\n                <thead>\r\n                  <tr className=\"row g-0\">\r\n                    <th className=\"col-3 header\">Apps</th>\r\n                    <th className=\"col-9 header\">Config</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"fullbody\">\r\n                  {props.selected &&\r\n                    props.selected.map((elem) => (\r\n                      <tr className=\"row g-0\" key={elem._id}>\r\n                        <td className=\"col-3\">\r\n                          <RemoveIcon\r\n                            type=\"button\"\r\n                            onClick={() => deleteApp(elem._id)}\r\n                          />\r\n                          \r\n                          {elem.name}[v{elem.version}]\r\n                        </td>\r\n                        <td className=\"col-9\">\r\n                          <ConfigApp app={elem} />\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </table>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\nexport default SelectApp;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport \"./AddAppGroup.css\";\r\nimport AddCircleOutlineTwoToneIcon from \"@material-ui/icons/AddCircleOutlineTwoTone\";\r\nimport SelectApp from \"./SelectApp/SelectApp\";\r\nimport { serverurl } from \"../../../../../logik/logik\";\r\nconst AddAppGroup = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  const closeModal=()=>{\r\n    setShow(false);\r\n    setSelected([]);\r\n  }\r\n  const [appGroupData, setAppGroupData] = useState();\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const getAppConfigData = (app) => {\r\n    var Latency = document.getElementById(\"Latency-\" + app._id).value;\r\n    var Throughput = document.getElementById(\"Throughput-\" + app._id).value;\r\n    var Jitter = document.getElementById(\"Jitter-\" + app._id).value;\r\n    var Reliability = document.getElementById(\"Reliability-\" + app._id).value;\r\n    var Availability = document.getElementById(\"Availability-\" + app._id).value;\r\n    var Portability = document.getElementById(\"Portability-\" + app._id).value;\r\n    var Security = document.getElementById(\"Security-\" + app._id).value;\r\n    var Usability = document.getElementById(\"Usability-\" + app._id).value;\r\n    var Cost = document.getElementById(\"Cost-\" + app._id).value;\r\n    var Users = document.getElementById(\"#Users-\" + app._id).value;\r\n\r\n    var data;\r\n    data = {\r\n      _id: app._id,\r\n      name: app.name,\r\n      version: app.version,\r\n      organization:app.organization,\r\n      qos: { latency: Latency, throughput: Throughput, jitter: Jitter },\r\n      nonFunctional: {\r\n        reliability: Reliability,\r\n        availability: Availability,\r\n        portability: Portability,\r\n        security: Security,\r\n        usability: Usability,\r\n        cost: Cost,\r\n      },\r\n      functional: { numberOfUser: Users },\r\n    };\r\n\r\n    return data;\r\n  };\r\n  const getAllData = () => {\r\n    var name=document.getElementById(\"AppGroupName\").value;;\r\n    var i = 0;\r\n    var apps=[]\r\n    for (i; i < selected.length; i++) {\r\n      apps.push(getAppConfigData(selected[i]))\r\n    }\r\n    var AppGroup={\r\n      user:props.user,\r\n      name:name,\r\n      apps:apps\r\n    }\r\n    return AppGroup;\r\n    \r\n  };\r\n\r\n\r\n  const sendInfoToServer = async() => {\r\n    const importData = getAllData();\r\n  \r\n    try {\r\n      fetch(`${serverurl}/appgroup`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(importData),\r\n      }).then(() => {\r\n        closeModal();\r\n        props.refresh();\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"AddAppGroup\">\r\n      <AddCircleOutlineTwoToneIcon\r\n        type=\"button\"\r\n        className=\"AddButton\"\r\n        onClick={() => setShow(true)}\r\n      />\r\n\r\n      <Modal\r\n        size=\"xl\"\r\n        scrollable={true}\r\n        show={show}\r\n        onHide={closeModal}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            AppGroup's Information <input id=\"AppGroupName\" placeholder=\"App Group Name\"></input>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <SelectApp\r\n            appGroupData={appGroupData}\r\n            setAppGroupData={(elem) => setAppGroupData(elem)}\r\n            selected={selected}\r\n            setSelected={(elem) => setSelected(elem)}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={closeModal}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={sendInfoToServer}>\r\n            Save\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddAppGroup;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport AppGroup from \"./AppGroup/AppGroup\";\r\nimport \"./AppGroupManagement.css\";\r\nimport AddAppGroup from \"./AddAppGroup/AddAppGroup\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport { serverurl } from \"../../../../logik/logik\";\r\nconst AppGroupManagement = (props) => {\r\n  const [appGroupList, setAppGroupList] = useState([]);\r\n  const [filteredString, setFilteredString] = useState(\"\");\r\n  const [filteredItems, setFilteredItems] = useState(appGroupList);\r\n  const deleteApp=(id)=>{\r\n    fetch(`${serverurl}/appgroup?id=${id}`, {\r\n      method: \"DELETE\",\r\n    }).then(refresh);\r\n  }\r\n  const refresh = useCallback(() => {\r\n    try {\r\n      fetch(`${serverurl}/appgroup?user=${props.user}`)\r\n        .then((response) => response.json())\r\n        .then((data) => setAppGroupList(data));\r\n    } catch (error) {\r\n      console.log(\"error!\");\r\n    }\r\n  },[props.user])\r\n  useEffect(() => {\r\n    refresh();\r\n  }, [refresh]);\r\n\r\n  \r\n  useEffect(() => {\r\n    if (filteredString === \"\") {\r\n      setFilteredItems(appGroupList);\r\n    } else {\r\n      \r\n      setFilteredItems(\r\n        appGroupList.filter((item) =>\r\n          Object.keys(item).some(\r\n            (elem) =>\r\n              elem !== \"_id\" &&\r\n              String(item[elem]).includes(filteredString)\r\n          )\r\n        )\r\n      );\r\n    }\r\n  }, [filteredString, appGroupList]);\r\n  return (\r\n    <div className=\"AppGroupManagement\">\r\n      <h2>\r\n        App Group Management\r\n        <RefreshIcon\r\n          type=\"button\"\r\n          className=\"refreshButton\"\r\n          onClick={() => refresh()}\r\n        />\r\n        <AddAppGroup user={props.user} refresh={refresh}/>\r\n      </h2>\r\n      <input className=\"inputfilter\"\r\n          value={filteredString}\r\n          onChange={(e) => {\r\n            setFilteredString(e.target.value);\r\n          }}\r\n          placeholder=\"Filter\"\r\n        />\r\n      <table className=\"table table-striped table-hover\">\r\n        <thead>\r\n          <tr className=\"row g-0\">\r\n            <th className=\"col\">App Groups</th>\r\n            <th className=\"col\">Apps</th>\r\n            <th className=\"col-7\">Config</th>\r\n            <th className=\"col\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"fullbody\">\r\n          {filteredItems.map((elem) => (\r\n            <AppGroup key={elem._id} appGroup={elem} deleteApp={id=>deleteApp(id)} refresh={refresh}/>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\nexport default AppGroupManagement;\r\n","import React, { useState , useCallback, useRef} from \"react\";\r\nimport { GoogleMap, Marker, Circle, InfoWindow } from \"@react-google-maps/api\";\r\nimport \"./Map.css\";\r\nimport MapStyle from \"./MapStyle\";\r\nconst mapContainerStyle = {\r\n  width: \"100%\",\r\n  height: \"49vh\",\r\n  float: \"right\",\r\n};\r\nconst center = {\r\n  lat: 52.51651,\r\n  lng: 13.33578,\r\n};\r\n\r\nconst options = {\r\n  styles: MapStyle,\r\n};\r\n\r\nconst Map = (props) => {\r\n  const mapRef = useRef();\r\n  const onMapLoad = useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n  const [showCircle, setShowCircle] = useState(true);\r\n  return (\r\n    <div className=\"GoogleMapAppGroupDeployment\">\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={13}\r\n        center={center}\r\n        options={options}\r\n        onLoad={onMapLoad}\r\n      >\r\n        {props.AllAppGroupList.map((appGroup) => (\r\n          <div key={appGroup._id}>\r\n            <Marker\r\n              position={appGroup.position}\r\n              icon={{\r\n                url: \"/Cloud.png\",\r\n                scaledSize: new window.google.maps.Size(30, 30),\r\n                origin: new window.google.maps.Point(0, 0),\r\n                anchor: new window.google.maps.Point(15, 15),\r\n              }}\r\n              onClick={() => {\r\n                props.setSelectedAppGroup(appGroup);\r\n              }}\r\n            />\r\n\r\n            {showCircle && (\r\n              <Circle\r\n                center={appGroup.position}\r\n                radius={appGroup.radius * 1000}\r\n                options={{\r\n                  strokeColor: \"#68b9f2\",\r\n                  fillColor: \"#2a5777\",\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n        {props.selectedAppGroup ? (\r\n          <InfoWindow\r\n            position={props.selectedAppGroup.position}\r\n            onCloseClick={() => {\r\n              props.setSelectedAppGroup(null);\r\n            }}\r\n          >\r\n            <div>\r\n              <h2>{props.selectedAppGroup.name}</h2>\r\n              <p>{props.setSelectedAppGroup.organization}</p>\r\n            </div>\r\n          </InfoWindow>\r\n        ) : null}\r\n        <button\r\n          className=\"button\"\r\n          variant=\"primary\"\r\n          onClick={() => setShowCircle(!showCircle)}\r\n        >\r\n          Coverage\r\n        </button>\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n};\r\nexport default Map;\r\n","\r\n\r\nconst MapStyle= [\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#444444\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f2f2f2\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": -100\r\n            },\r\n            {\r\n                \"lightness\": 45\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"simplified\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#c0e4f3\"\r\n            },\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n\r\nexport default MapStyle;","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport \"./DeployAppList.css\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SettingsTwoToneIcon from \"@material-ui/icons/SettingsTwoTone\";\r\nconst useSortableData = (items, config = null) => {\r\n  const [sortConfig, setSortConfig] = useState(config);\r\n  const sortedItems = useMemo(() => {\r\n    let sortableItems = [...items];\r\n    if (sortConfig !== null) {\r\n      sortableItems.sort((a, b) => {\r\n        if (a[sortConfig.key] < b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? -1 : 1;\r\n        }\r\n        if (a[sortConfig.key] > b[sortConfig.key]) {\r\n          return sortConfig.direction === \"ascending\" ? 1 : -1;\r\n        }\r\n\r\n        return 0;\r\n      });\r\n    }\r\n    return sortableItems;\r\n  }, [items, sortConfig]);\r\n\r\n  const requestSort = (key) => {\r\n    let direction = \"ascending\";\r\n    if (\r\n      sortConfig &&\r\n      sortConfig.key === key &&\r\n      sortConfig.direction === \"ascending\"\r\n    ) {\r\n      direction = \"descending\";\r\n    }\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  return { items: sortedItems, requestSort, sortConfig };\r\n};\r\n\r\nconst DeployAppList = (props) => {\r\n  const { items, requestSort, sortConfig } = useSortableData(\r\n    props.AllAppGroupList\r\n  );\r\n  const [filteredString, setFilteredString] = useState(\"\");\r\n  const [filteredItems, setFilteredItems] = useState(items);\r\n  const getClassNamesFor = (name) => {\r\n    if (!sortConfig) {\r\n      return;\r\n    }\r\n    return sortConfig.key === name ? sortConfig.direction : undefined;\r\n  };\r\n  useEffect(() => {\r\n    if (filteredString === \"\") {\r\n      setFilteredItems(items);\r\n    } else {\r\n      setFilteredItems(\r\n        items.filter((item) =>\r\n          Object.keys(item).some(\r\n            (elem) =>\r\n              elem !== \"_id\" && String(item[elem]).includes(filteredString)\r\n          )\r\n        )\r\n      );\r\n    }\r\n  }, [filteredString, items]);\r\n\r\n  return (\r\n    <div className=\"DeployAppList\">\r\n      <div className=\"filter\">\r\n        <input\r\n          className=\"inputfilter\"\r\n          value={filteredString}\r\n          onChange={(e) => {\r\n            setFilteredString(e.target.value);\r\n          }}\r\n          placeholder=\"Filter\"\r\n        />\r\n      </div>\r\n      <table className=\"table table-striped table-hover\">\r\n        <thead>\r\n          <tr className=\"row g-0\">\r\n            <th className=\"col-2\">\r\n              <div\r\n                onClick={() => requestSort(\"name\")}\r\n                className={getClassNamesFor(\"name\")}\r\n              >\r\n                App Group\r\n              </div>\r\n            </th>\r\n            <th className=\"col\">\r\n              <div>App Group Information</div>\r\n            </th>\r\n            <th className=\"col-1\">\r\n              <div>From</div>\r\n            </th>\r\n            <th className=\"col-1\">\r\n              <div>Until</div>\r\n            </th>\r\n\r\n            <th className=\"col-1\">\r\n              <div\r\n                onClick={() => requestSort(\"status\")}\r\n                className={getClassNamesFor(\"status\")}\r\n              >\r\n                Status\r\n              </div>\r\n            </th>\r\n            <th className=\"col-1\">Action</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody className=\"body\">\r\n          {filteredItems.map((appGroup) => (\r\n            <tr\r\n              className={`row g-0 ${\r\n                props.selectedAppGroup&&props.selectedAppGroup._id === appGroup._id ? \"active\" : \"\"\r\n              } `}\r\n              key={appGroup._id}\r\n              onClick={() => {\r\n                props.setSelectedAppGroup(appGroup);   \r\n              }} \r\n            >\r\n              <td className=\"col-2\">{appGroup.name}</td>\r\n              <td className=\"col\">\r\n                {props.selectedAppGroup &&\r\n                  props.selectedAppGroup._id === appGroup._id && (\r\n                    <table className=\"table table-striped table-hover\">\r\n                      <thead>\r\n                        <tr className=\"row g-0\">\r\n                          <th className=\"col\">Apps</th>\r\n                          <th className=\"col\">Network</th>\r\n                          <th className=\"col\">Cloud</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {appGroup.apps.map((app) => (\r\n                          <tr className=\"row g-0\" key={app._id}>\r\n                            <td className=\"col\">{app.name}[v{app.version}]</td>\r\n                            <td className=\"col\">{app.network.provider}</td>\r\n                            <td className=\"col\">{app.cloud.provider}</td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  )}\r\n              </td>\r\n              <td className=\"col-1\">{appGroup.begin}</td>\r\n              <td className=\"col-1\">{appGroup.end}</td>\r\n              <td className=\"col-1\">{appGroup.status}</td>\r\n              <td className=\"col-1\">\r\n                <SettingsTwoToneIcon className=\"button\" type=\"button\" />\r\n                <DeleteIcon className=\"button\" type=\"button\" />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeployAppList;\r\n","import React, { useState } from \"react\";\r\nimport \"./DeployAppView.css\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\n\r\nimport Map from \"./Map/Map\";\r\nimport DeployAppList from \"./DeployAppList/DeployAppList\";\r\nvar AllAppGroupList = [\r\n  {\r\n    _id: 1,\r\n    position: { lat: 52.51508505568695, lng: 13.34599385192873 },\r\n    name: \"Emergency in TierGarten\",\r\n    begin:\"5:20, 1.12.2021\",\r\n    end:\"5:20, 31.12.2021\",\r\n    apps: [\r\n      {\r\n        _id: \"1\",\r\n        name: \"E-Health\",\r\n        version:\"2\",\r\n        organization: \"Dai-Labor\",\r\n        network: { _id: \"1\", provider: \"Private 5G\" },\r\n        cloud: { _id: \"1\", provider: \"Private Edge\" },\r\n      },\r\n      {\r\n        _id: \"2\",\r\n        name: \"Fal_Detection\",\r\n        version:\"2\",\r\n        organization: \"Dai-Labor\",\r\n        network: { _id: \"1\", provider: \"Private 5G\" },\r\n        cloud: { _id: \"1\", provider: \"Private Edge\" },\r\n      },\r\n    ],\r\n    radius: 2,\r\n    status:\"deployed\",\r\n  },\r\n  {\r\n    _id: 2,\r\n    position: { lat: 52.516860924211116, lng: 13.375347947387715 },\r\n    name: \"Ambulance in TierGarten\",\r\n    begin:\"5:20, 15.12.2021\",\r\n    end:\"5:20, 31.12.2021\",\r\n    apps: [\r\n      {\r\n        _id: \"1\",\r\n        name: \"Emergency VideoConf\",\r\n        version:\"2\",\r\n        organization: \"Dai-Labor\",\r\n        network: { _id: \"1\", provider: \"Telekom\" },\r\n        cloud: { _id: \"1\", provider: \"Amazon\" },\r\n      },\r\n      {\r\n        _id: \"2\",\r\n        name: \"Fal_Detection\",\r\n        version:\"2\",\r\n        organization: \"Dai-Labor\",\r\n        network: { _id: \"1\", provider: \"Telekom\" },\r\n        cloud: { _id: \"1\", provider: \"Amazon\" },\r\n      },\r\n    ],\r\n    radius: 2,\r\n    organization: \"Dai-Labor\",\r\n    status:\"pending\"\r\n  },\r\n];\r\nconst DeployAppView = () => {\r\n  const [selectedAppGroup, setSelectedAppGroup] = useState(null);\r\n\r\n  return (\r\n    <div className=\"DeployAppView\">\r\n      <h2>\r\n        Deployment/Deployed App\r\n        <RefreshIcon type=\"button\" className=\"refreshButton\" />\r\n      </h2>\r\n      <div className=\"MapContainer\">\r\n        <Map\r\n          AllAppGroupList={AllAppGroupList}\r\n          setSelectedAppGroup={(infra) => {\r\n            setSelectedAppGroup(infra);\r\n          }}\r\n          selectedAppGroup={selectedAppGroup}\r\n        />\r\n      </div>\r\n      <div>\r\n        <DeployAppList\r\n          AllAppGroupList={AllAppGroupList}\r\n          setSelectedAppGroup={(elem) => setSelectedAppGroup(elem)}\r\n          selectedAppGroup={selectedAppGroup}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeployAppView;\r\n","import React from \"react\";\r\nimport \"./AUMainBody.css\";\r\nimport AppGroupManagement from \"./AppGroupManagement/AppGroupManagement\";\r\nimport DeployAppView from \"./DeployAppView/DeployAppView\";\r\n\r\nfunction AUMainBody(props) {\r\n  return (\r\n    <div className=\"AUMainBody\">\r\n      {props.menu === \"AppGroupManagement\" && <AppGroupManagement user={props.user} />}\r\n      {props.menu === \"OrderApp\" && <DeployAppView user={props.user} />}\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default AUMainBody;\r\n","import React, { useState } from \"react\";\r\nimport MainHeader from \"../MainHeader/MainHeader\";\r\nimport MainFooter from \"../MainFooter/MainFooter\";\r\nimport AULeftSideMenu from \"../LeftsideMenu/AULeftSideMenu\";\r\nimport AUMainBody from \"./AUMainBody/AUMainBody\";\r\n\r\nfunction GUIAppUser(props) {\r\n  const [menu, setMenu] = useState(\"AppGroupManagement\");\r\n  return (\r\n    <>\r\n      <MainHeader\r\n        setLogin={() => props.setLogin(false)}\r\n        user={props.user}\r\n        userRole={props.userRole}\r\n      />\r\n      <AULeftSideMenu menu={menu} setMenu={e=>setMenu(e)}></AULeftSideMenu>\r\n      <AUMainBody menu={menu} user={props.user}/>\r\n      <MainFooter />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GUIAppUser;\r\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useLoadScript } from \"@react-google-maps/api\";\nimport Login from \"./components/Login/Login\";\nimport GUIAppProvider from \"./components/GUIAppProvider/GUIAppProvider\";\nimport GUIInfraProvider from \"./components/GUIInfraProvider/GUIInfraProvider\";\nimport GUIAppUser from \"./components/GUIAppUser/GUIAppUser\";\nconst libraries = [\"places\"];\nfunction App() {\n  const [userRole, setUserRole] = useState(\"EndUser\");\n  const [login, setLogin] = useState(false);\n  const [user, setUser] = useState(\"\");\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: \"AIzaSyDrTrSM6MnizIsVaXvygHQCCM1WGIHmtAo\",\n    libraries,\n  });\n  if (loadError) return \"Errorr\";\n  if (!isLoaded) return \"loading\";\n  return (\n    <>\n      {login === false && (\n        <Login\n          setLogin={() => setLogin(true)}\n          setUser={(user) => setUser(user)}\n          setUserRole={(userRole) => setUserRole(userRole)}\n        />\n      )}\n      {login === true &&\n        (userRole === \"End User\" || userRole === \"Infrastructure Provider\") && (\n          <GUIInfraProvider\n            setUserRole={(elem) => setUserRole(elem)}\n            setLogin={() => setLogin(false)}\n            userRole={userRole}\n            user={user}\n          />\n        )}\n      {login === true && userRole === \"App Provider\" && (\n        <GUIAppProvider\n          setLogin={() => setLogin(false)}\n          user={user}\n          userRole={userRole}\n        />\n      )}\n      {login === true && userRole === \"App User\" && (\n        <GUIAppUser\n          setLogin={() => setLogin(false)}\n          user={user}\n          userRole={userRole}\n        />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}